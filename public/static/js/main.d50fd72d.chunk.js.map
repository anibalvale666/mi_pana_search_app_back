{"version":3,"sources":["types/types.js","reducers/accountReducer.js","reducers/authReducer.js","reducers/companyReducer.js","reducers/dataAceiteReducer.js","reducers/filterReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/auth.js","actions/data.js","components/ui/Navbar.js","actions/account.js","actions/ui.js","hooks/useForm.js","components/account/AccountModal.js","components/account/AccountRecordModal.js","components/account/AccountItemList.js","actions/company.js","components/account/AccountScreen.js","components/auth/LoginScreen.js","components/consulta/SearchResponse.js","components/consulta/SearchScreen.js","actions/filter.js","components/filterwishlist/FilterModal.js","components/filterwishlist/FilterWishListScreen.js","components/registro/RegisterScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","ConsultaApp.js","index.js"],"names":["types","initialState","accountList","accountActive","accountSearchBrand","accountListNotPaid","checking","nick","companies","companyActive","name","brand","currency","searchData","placa","marca","aceite_motor","aceite","fecha","km","aceite_caja","filtros","aire","combustible","cabina","liquido_radiador","liquido","obs","id","filterSearchDate","filterList","filterActive","OpenFilterModal","OpenAccountModal","OpenAccountRecordModal","rootReducer","combineReducers","data","state","action","type","payload","auth","filter","map","e","ui","account","company","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSintoken","endpoint","method","url","fetch","headers","body","JSON","stringify","fetchContoken","token","localStorage","getItem","checkingFinish","login","user","logout","dataStartResult","dispatch","a","resp","json","ok","dataResult","Swal","fire","msg","badResult","console","log","dataAddNew","dataUpdated","Navbar","useDispatch","useSelector","className","to","activeClassName","exact","onClick","clear","getNotPaidAccounts","notPaidAccountsLoaded","accounts","accountAddNew","accountStartUpdate","accountUpdated","accountStartResult","accountResultLoaded","accountNotResultLoaded","accountSetActive","accountClearSetActive","accountDeleted","uiOpenFilterModal","uiOpenAccountModal","uiCloseAccountRecordModal","useForm","useState","values","setValues","reset","setFormValues","handleInputChange","target","split","section","key","value","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","AccountModal","initAccount","initial_date","Date","invoice_number","total_amount","record","accountInitialDate","setAccountInitialDate","formValues","useEffect","date","amount","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","onSubmit","preventDefault","onChange","placeholder","autoComplete","x","i","index","list","handleListInputChangeDate","disabled","handleListInputChange","length","splice","handleRemoveClick","init","AccountRecordModal","debtCalculate","item","reduce","prev","next","paid","AccountItemList","toLocaleDateString","recordDate","_id","bind","accountStartDelete","companyResultLoaded","companyNotResultLoaded","AccountScreen","setPaid","l","showList","setShowList","options","label","getAmountList","li","getDeudaTotalBruta","onlyBrand","lnp","listDolar","listSol","totalPaidDolar","totalPaidSol","totalAmountDolar","totalAmountSol","find","c","checked","scope","LoginScreen","password","handleInputchange","setItem","getTime","startLogin","SearchResponse","aceite_motor_fecha","aceite_caja_fecha","liquido_radiador_fecha","SearchScreen","trueSearch","maxLength","filtertAddNew","filterUpdated","filterStartResult","FilterResultLoaded","filters","FilterNotResultLoaded","filterClearSetActive","filterDeleted","changeFilterSearchDate","FilterModal","initFilter","filterType","code","application","setTimeout","handleAddClick","filterStartAddNew","FilterWishListScreen","searchDate","setSearchDate","handleItemUpdate","filterSetActive","handleItemDelete","filterStartDelete","filterDate","RegisterScreen","fechaAceiteMotor","setFechaAceiteMotor","fechaAceiteCaja","setFechaAceiteCaja","fechaRefrigerante","setFechaRefrigerante","disablePlaca","setDisablePlaca","placaValid","setPlacaValid","marcaValid","setMarcaValid","trim","dataStartUpdate","PrivateRoute","isAuthenticated","Component","component","rest","props","PublicRoute","AppRouter","path","ConsultaApp","ReactDOM","render","document","getElementById"],"mappings":"uSAAaA,EAKG,sBALHA,EAMG,4BANHA,EAOI,qBAPJA,EAQS,uBARTA,EAWS,qCAXTA,EAaU,yBAbVA,EAcW,0BAdXA,EAeW,0BAfXA,EAgBY,2BAhBZA,EAiBiB,kCAjBjBA,EAkBkB,kCAlBlBA,EAoBQ,sBApBRA,EAqBgB,+BArBhBA,EAsBK,mBAtBLA,EAuBM,0BAvBNA,EAwBM,0BAxBNA,EAyBK,8BAzBLA,EA0BQ,kCA1BRA,EA4BW,iCA5BXA,EAgCS,uBAhCTA,EAiCkB,iCAjClBA,EAkCM,4BAlCNA,EAmCO,4BAnCPA,EAoCO,4BApCPA,EAqCM,gCArCNA,EAsCS,oCAtCTA,EAuCW,kCAvCXA,EAwCgB,wCAxChBA,EA6CM,gCA7CNA,EA8CS,oCA9CTA,EA+CS,uBA/CTA,EAgDkB,iCAhDlBA,EAmDW,oCAnDXA,EAqDE,eArDFA,EAuDG,gBCpDVC,EAAe,CACjBC,YAAa,GACbC,cAAe,KACfC,mBAAoB,UACpBC,mBAAoB,ICJlBJ,EAAe,CACjBK,UAAU,EACVC,KAAM,MCHJN,EAAe,CACjBO,UAAW,GACXC,cAAe,CACXC,KAAK,aACLC,MAAM,UACNC,SAAS,UCLXX,EAAe,CACjBY,WAAY,CACRC,MAAO,GACPC,MAAO,GACPC,aAAc,CACVC,OAAQ,GACRC,MAAO,GACPC,GAAI,IAERC,YAAa,CACTH,OAAQ,GACRC,MAAO,GACPC,GAAI,IAERE,QAAQ,CACJJ,OAAQ,GACRK,KAAM,GACNC,YAAa,GACbC,OAAQ,IAEZC,iBAAkB,CACdC,QAAS,GACTR,MAAO,GACPC,GAAI,IAERQ,IAAK,GACLC,GAAI,KC1BN3B,EAAe,CAEjB4B,iBAAkB,GAClBC,WAAY,GACZC,aAAc,MCJZ9B,EAAe,CACjB+B,iBAAiB,EACjBC,kBAAkB,EAClBC,wBAAwB,GCMfC,EAAcC,YAAgB,CACvCC,KHsB6B,WAAmC,IAAjCC,EAAgC,uDAAzBrC,EAAcsC,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAKxC,EACD,OAAO,eACAsC,GAEX,KAAKtC,EAKL,KAAKA,EACD,OAAO,2BACAsC,GADP,IAEIzB,WAAY0B,EAAOE,UAG3B,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEIzB,WAAYZ,EAAaY,aAGjC,QACI,OAAOyB,IG7CfI,KLJuB,WAAmC,IAAlCJ,EAAiC,uDAAzBrC,EAAcsC,EAAW,uCACzD,OAAQA,EAAOC,MAEX,KAAKxC,EACD,OAAO,uCACAsC,GACAC,EAAOE,SAFd,IAGInC,UAAU,IAElB,KAAKN,EACD,OAAO,2BACAsC,GADP,IAEIhC,UAAU,IAElB,KAAKN,EACD,MAAO,CACHM,UAAU,GAGlB,QACI,OAAOgC,IKffK,OFLyB,WAAoC,IAAnCL,EAAkC,uDAA1BrC,EAAcsC,EAAY,uCAE5D,OAAQA,EAAOC,MAEX,KAAKxC,EACD,OAAO,2BACAsC,GADP,IAEIR,WAAW,YAAMS,EAAOE,WAIhC,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEIR,WAAW,GAAD,mBACHQ,EAAMR,YADH,CAENS,EAAOE,YAInB,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEIR,WAAYQ,EAAMR,WAAWc,KACzB,SAAAC,GAAC,OAAKA,EAAEjB,KAAOW,EAAOE,QAAQb,GAAOW,EAAOE,QAAUI,OAIlE,KAAK7C,EACD,OAAO,2BACAsC,GADP,IAEIP,aAAcQ,EAAOE,UAE7B,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEIP,aAAc,OAGtB,KAAK/B,EACD,OAAO,2BACAsC,GADP,IAEIR,WAAYQ,EAAMR,WAAWa,QAC1B,SAAAE,GAAC,OAAKA,EAAEjB,KAAOW,EAAOE,aAIjC,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEIR,WAAY,KAIpB,KAAK9B,EACD,OAAO,2BACAsC,GADP,IAEIT,iBAAkBU,EAAOE,UAGjC,QACI,OAAOH,IEvDfQ,GDLqB,WAAqC,IAAnCR,EAAkC,uDAA1BrC,EAAcsC,EAAY,uCAEzD,OAASA,EAAOC,MACZ,KAAKxC,EACD,OAAO,2BACAsC,GADP,IAEIN,iBAAiB,IAGzB,KAAKhC,EACD,OAAO,2BACAsC,GADP,IAEIN,iBAAiB,IAEzB,KAAKhC,EACD,OAAO,2BACAsC,GADP,IAEIL,kBAAkB,IAG1B,KAAKjC,EACD,OAAO,2BACAsC,GADP,IAEIL,kBAAkB,IAG1B,KAAKjC,EACD,OAAO,2BACAsC,GADP,IAEIJ,wBAAwB,IAGhC,KAAKlC,EACD,OAAO,2BACAsC,GADP,IAEIJ,wBAAwB,IAGhC,QACI,OAAOI,ICjCfS,QNN0B,WAAmC,IAAlCT,EAAiC,uDAAzBrC,EAAcsC,EAAW,uCAC5D,OAAQA,EAAOC,MACX,KAAKxC,EACD,OAAO,2BACAsC,GADP,IAEIpC,YAAY,YAAMqC,EAAOE,WAGjC,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEIpC,YAAY,GAAD,mBACJoC,EAAMpC,aADF,CAEPqC,EAAOE,YAInB,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEIpC,YAAaoC,EAAMpC,YAAY0C,KAC3B,SAAAC,GAAC,OAAKA,EAAEjB,KAAOW,EAAOE,QAAQb,GAAOW,EAAOE,QAAUI,OAIlE,KAAK7C,EACD,OAAO,2BACAsC,GADP,IAEInC,cAAeoC,EAAOE,UAE9B,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEInC,cAAe,OAGvB,KAAKH,EACD,OAAO,2BACAsC,GADP,IAEIpC,YAAaoC,EAAMpC,YAAYyC,QAC5B,SAAAE,GAAC,OAAKA,EAAEjB,KAAOW,EAAOE,aAIjC,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEIpC,YAAa,KAIrB,KAAKF,EACD,OAAO,2BACAsC,GADP,IAEIlC,mBAAoBmC,EAAOE,UAGnC,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEIjC,mBAAmB,YAAMkC,EAAOE,WAGxC,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEIjC,mBAAoB,KAG5B,QACI,OAAOiC,IM/DfU,QJL0B,WAAoC,IAAlCV,EAAiC,uDAAzBrC,EAAcsC,EAAW,uCAC7D,OAAQA,EAAOC,MAEX,KAAKxC,EACD,OAAO,2BACAsC,GADP,IAEI9B,UAAU,YAAK+B,EAAOE,WAE9B,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEI9B,UAAW,KAGnB,KAAKR,EACD,OAAO,2BACAsC,GADP,IAEI7B,cAAe8B,EAAOE,UAE9B,KAAKzC,EACD,OAAO,2BACAsC,GADP,IAEI7B,cAAe,OAEvB,QACI,OAAO6B,MKjCbW,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAE9FC,GAAQC,YACjBnB,EACAc,EACIM,YAAgBC,O,8CCTlBC,GAAUC,wCAIVC,GAAgB,SAACC,EAAUvB,GAAwB,IAAlBwB,EAAiB,uDAAV,MACpCC,EAAI,GAAD,OAAKL,GAAL,YAAgBG,GAEzB,MAAe,QAAXC,EACOE,MAAOD,GAEPC,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAW9B,MAO5B+B,GAAgB,SAACR,EAAUvB,GAAwB,IAAlBwB,EAAiB,uDAAV,MACpCC,EAAI,GAAD,OAAKL,GAAL,YAAgBG,GACnBS,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXV,EACOE,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAW9B,M,mBCG5BmC,GAAiB,iBAAO,CAAEhC,KAAMxC,IAGhCyE,GAAQ,SAAEC,GAAF,MAAa,CACvBlC,KAAMxC,EACNyC,QAASiC,IAYPC,GAAS,iBAAO,CAACnC,KAAMxC,I,QCxDhB4E,GAAkB,SAAE9D,GAC7B,gDAAO,WAAQ+D,GAAR,kBAAAC,EAAA,+EAEoBnB,GAAc,OAAO,CAAC7C,SAAQ,QAFlD,cAEOiE,EAFP,gBAIoBA,EAAKC,OAJzB,QAIOf,EAJP,QAMUgB,GACLJ,EAASK,GAAWjB,EAAK5B,QAEzB8C,KAAKC,KAAK,QAASnB,EAAKoB,IAAK,SAC7BR,EAASS,OAVd,kDAcCC,QAAQC,IAAR,MAdD,0DAAP,uDAmBEN,GAAa,SAAE7C,GAAF,MAAa,CAC5BG,KAAKxC,EACLyC,QAASJ,IAGAiD,GAAY,iBAAO,CAC5B9C,KAAMxC,IAmBGyF,GAAa,SAAEpD,GAAF,MAAa,CACnCG,KAAMxC,EACNyC,QAASJ,IA4BPqD,GAAc,SAACrD,GAAD,MAAW,CAC3BG,KAAMxC,EACNyC,QAASJ,I,QC3EAsD,GAAS,WAClB,IAAMd,EAAWe,cACVrF,EAAQsF,aAAY,SAAAvD,GAAK,OAAIA,EAAMI,QAAnCnC,KAOP,OACI,uBAAKuF,UAAU,8CAAf,UAEA,eAAC,KAAD,CAAMA,UAAU,eAAeC,GAAG,IAAlC,oBAGA,sBAAKD,UAAU,kBAAf,WAEWvF,GACH,uBAAKuF,UAAU,aAAf,UACI,eAAC,KAAD,CACIE,gBAAgB,SAChBF,UAAU,oBACVG,OAAK,EACLF,GAAG,kBAJP,iCASA,eAAC,KAAD,CACIC,gBAAgB,SAChBF,UAAU,oBACVG,OAAK,EACLF,GAAG,WAJP,mCAYZ,sBAAKD,UAAU,wDAAf,SACQ,qBAAIA,UAAU,qBAAd,SAEWvF,EAGK,yBACIuF,UAAU,yBACVI,QA5CX,WACjBrB,GFyCG,SAAEA,GACLP,aAAa6B,QAEbtB,EAASF,SE3CTE,EAASS,OAwCe,oBASH,eAAC,KAAD,CACGU,gBAAgB,SAChBF,UAAU,oBACVG,OAAK,EACLF,GAAG,SAJN,2B,SCpDhBK,I,MAAqB,WAC9B,gDAAQ,WAAMvB,GAAN,kBAAAC,EAAA,+EAEmBV,GAAe,0BAA0B,GAAG,QAF/D,cAEMW,EAFN,gBAGmBA,EAAKC,OAHxB,OAGMf,EAHN,OAMAY,EAAUwB,GAAuBpC,EAAKqC,WANtC,kDASAf,QAAQC,IAAR,MATA,0DAAR,wDAcEa,GAAwB,SAACC,GAAD,MAAe,CACzC9D,KAAMxC,EACNyC,QAAS6D,IA6BPC,GAAgB,SAACxD,GAAD,MAAc,CAChCP,KAAMxC,EACNyC,QAASM,IAIAyD,GAAqB,SAAEzD,GAChC,gDAAO,WAAM8B,GAAN,kBAAAC,EAAA,+EAEoBV,GAAc,WAAD,OAAYrB,EAAQnB,IAAKmB,EAAS,OAFnE,cAEOgC,EAFP,gBAGoBA,EAAKC,OAHzB,QAGOf,EAHP,QAKWgB,IAENJ,EAAU4B,GAAgBxC,EAAKlB,UAC/BoC,KAAKC,KAAK,cAAc,2BAAyB,YAEjDD,KAAKC,KAAK,QAASnB,EAAKoB,IAAK,SAVlC,kDAcCE,QAAQC,IAAR,MAdD,0DAAP,uDAmBEiB,GAAiB,SAAC1D,GAAD,MAAc,CACjCP,KAAMxC,EACNyC,QAASM,IAMA2D,GAAqB,SAAC/F,GAC/B,gDAAQ,WAAMkE,GAAN,kBAAAC,EAAA,+EAEmBV,GAAe,UAAU,CAACzD,SAAO,QAFpD,cAEMoE,EAFN,gBAGmBA,EAAKC,OAHxB,QAGMf,EAHN,QAKQgB,GACJJ,EAAU8B,GAAqB1C,EAAKqC,WAEpCzB,EAAU+B,MARd,kDAWArB,QAAQC,IAAR,MAXA,0DAAR,uDAgBEmB,GAAsB,SAAEL,GAAF,MAAgB,CACxC9D,KAAMxC,EACNyC,QAAS6D,IAIPM,GAAyB,iBAAM,CACjCpE,KAAMxC,IAGG6G,GAAmB,SAAC9D,GAAD,MAAc,CAC1CP,KAAMxC,EACNyC,QAASM,IAGA+D,GAAwB,iBAAO,CACxCtE,KAAMxC,IAsBJ+G,GAAiB,SAACnF,GAAD,MAAS,CAC5BY,KAAMxC,EACNyC,QAAUb,IChJDoF,GAAoB,iBAAO,CAAExE,KAAMxC,IAGnCiH,GAAqB,iBAAO,CAAEzE,KAAMxC,IAKpCkH,GAA4B,iBAAO,CAAE1E,KAAMxC,I,iDCT3CmH,GAAU,WAAwB,IAAvBlH,EAAsB,uDAAP,GACrC,EAA4BmH,mBAASnH,GAArC,oBAAOoH,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACZD,EAAUrH,IAENuH,EAAgB,SAAC,GAAa,IAAZlF,EAAW,EAAXA,MACtBgF,EAAUhF,IAGNmF,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,EAAuBA,EAAOhH,KAAKiH,MAAM,KAAzC,oBAAOC,EAAP,KAAgBC,EAAhB,KAMIP,EAFAO,EAEU,2BACLR,GADI,mBAENO,EAFM,YAAC,eAGHP,EAAOO,IAHL,mBAIJC,EAAMH,EAAOI,UAKV,2BACLT,GADI,mBAENO,EAAUF,EAAOI,UAOxB,MAAO,CAACT,EAAQI,EAAmBF,EAAOC,ICrBtCO,GAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIfC,KAAMC,cAAc,SAGb,IAAMC,GAAe,WAC1B,IAAM5D,EAAWe,cAET3D,EAAqB4D,aAAY,SAACvD,GAAD,OAAWA,EAAMQ,MAAlDb,iBACDxB,EAAiBoF,aAAa,SAAAvD,GAAK,OAAIA,EAAMU,WAA7CvC,cACCN,EAAkB0F,aAAY,SAACvD,GAAD,OAAWA,EAAMS,WAA/C5C,cAEFuI,EAAc,CAClBC,aAAc,IAAIC,KAClBC,eAAgB,GAChBlI,MAAOF,EAAcE,MACrBmI,aAAc,GACdlI,SAAUH,EAAcG,SACxBmI,OAAQ,IAIV,EAAoD3B,mBAChDjH,EAAgBA,EAAcwI,aAAe,IAAIC,MADrD,oBAAOI,EAAP,KAA2BC,EAA3B,KAIA,EAAuD9B,GACnDhH,GAAgCuI,GADpC,oBAAOQ,EAAP,KAAmBzB,EAAnB,KAAsCD,EAAtC,KAIUmB,EAAwEO,EAAxEP,aAAcE,EAA0DK,EAA1DL,eAAgBlI,EAA0CuI,EAA1CvI,MAAOmI,EAAmCI,EAAnCJ,aAAcC,EAAqBG,EAArBH,OAAQnI,EAAasI,EAAbtI,SAGrEuI,qBAAU,WAER3B,EAAc,CACZmB,aAAc,IAAIC,KAClBC,eAAgB,GAChBlI,MAAOF,EAAcE,MACrBmI,aAAc,GACdlI,SAAYH,EAAcG,SAC1BmI,OAAQ,CAAC,CAAEK,KAAM,IAAIR,KAAQS,OAAQ,SAEtC,CAAC5I,IAEJ0I,qBAAU,WAEN3B,EADGrH,GAGYuI,KAEhB,CAACvI,IAEJ,IAmCMmJ,EAAa,WAEjBzE,EF5GsC,CAAErC,KAAMxC,IE8G9CwH,EAAc,CACZmB,aAAc,IAAIC,KAClBC,eAAgB,GAChBlI,MAAOF,EAAcE,MACrBmI,aAAc,GACdC,OAAQ,CAAC,CAAEK,KAAM,IAAIR,KAAQS,OAAQ,OAGjClJ,GACJ0E,EAASiC,OAwCb,OACE,gBAAC,KAAD,CACEyC,OAAQtH,EACRuH,eAAgBF,EAChBG,MAAO1B,GACP2B,eAAgB,IAJlB,UAQE,oCAAMvJ,EAAgB,gBAAkB,iBAAxC,OACA,oCAAMQ,EAAN,OACA,oCAAMC,EAAN,OACA,wBACA,wBAAMkF,UAAU,YAAY6D,SA/BP,SAAC9G,GAGxB,GAFAA,EAAE+G,kBAEGjB,IAAiBE,IAAmBlI,IAAUmI,EACjD,OAAO3D,KAAKC,KAAK,QAAS,+BAAgC,SHnH9B,IAAErC,EGsH5B5C,GACF0E,EAAS2B,GAAmB0C,IAC5BrE,EAASiC,OAETjC,GH1H8B9B,EG0HFmG,EHzH9B,yCAAO,WAAMrE,GAAN,kBAAAC,EAAA,+EAEoBV,GAAc,cAAcrB,EAAS,QAFzD,cAEOgC,EAFP,gBAGoBA,EAAKC,OAHzB,QAGOf,EAHP,QAKSgB,KACJJ,EAAS0B,GAActC,EAAKlB,UAE5BoC,KAAKC,KAAK,WAAW,wBAAsB,YARhD,kDAYCG,QAAQC,IAAR,MAZD,0DAAP,wDG6HA8D,KAgBE,UACE,sBAAKxD,UAAU,aAAf,SACE,eAAC,KAAD,CACE+D,SAxGqB,SAAChH,GAC9BoG,EAAsBpG,GACtB4E,EAAkB,CAChBC,OAAQ,CACNhH,KAAM,eACNoH,MAAOjF,MAoGHiF,MAAOkB,EACPlD,UAAU,mBAOd,uBAAKA,UAAU,aAAf,UACE,0DACA,wBACEtD,KAAK,OACLsD,UAAU,eACVgE,YAAY,+BACZpJ,KAAK,iBACLqJ,aAAa,MACbjC,MAAOe,EACPgB,SAAUpC,OAGd,uBAAK3B,UAAU,aAAf,UACE,2CACA,wBACEtD,KAAK,SACLsD,UAAU,eACVgE,YAAY,yBACZpJ,KAAK,eACLqJ,aAAa,MACbjC,MAAOgB,EACPe,SAAUpC,OAGd,uBAAK3B,UAAU,aAAf,UACE,2CACCiD,EAAOnG,KAAI,SAACoH,EAAGC,GACd,OACE,uBAAKnE,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,SACE,eAAC,KAAD,CACE+D,SAAU,SAAChH,GAAD,OAzHM,SAACA,EAAGqH,GACpC,IACMC,EAAI,YAAOpB,GACjBoB,EAAKD,GAAL,KAAoBrH,EACpB4E,EAAkB,CAChBC,OAAQ,CACNhH,KAAM,SACNoH,MAAOqC,KAkHsBC,CAA0BvH,EAAGoH,IAC9CnC,MAAOkC,EAAEZ,KACTtD,UAAU,eACVuE,UAAU,MAGd,sBAAKvE,UAAU,WAAf,SACE,wBACEtD,KAAK,SACLuH,aAAa,MACbrJ,KAAK,SACLoJ,YAAY,mBACZhE,UAAU,eACVgC,MAAOkC,EAAEX,OACTQ,SAAU,SAAChH,GAAD,OAnJE,SAACA,EAAGqH,GAChC,MAAwBrH,EAAE6E,OAAlBhH,EAAR,EAAQA,KAAMoH,EAAd,EAAcA,MACRqC,EAAI,YAAOpB,GACjBoB,EAAKD,GAAOxJ,GAAQoH,EACpBL,EAAkB,CAChBC,OAAQ,CACNhH,KAAM,SACNoH,MAAOqC,KA4IsBG,CAAsBzH,EAAGoH,QAI9C,sBAAKnE,UAAU,gBAAf,SACqB,IAAlBiD,EAAOwB,QACN,yBACEzE,UAAU,8BACVI,QAAS,SAACrD,GAAD,OAjHH,SAACA,EAAGqH,GAC5BrH,EAAE+G,iBACF,IAAMO,EAAI,YAAOpB,GAEjBoB,EAAKK,OAAON,EAAO,GAEnBzC,EAAkB,CAChBC,OAAQ,CACNhH,KAAM,SACNoH,MAAOqC,KAwGuBM,CAAkB5H,EAAGoH,IAFvC,SAIE,oBAAGnE,UAAU,uBA3BcmE,SAqCzC,0BAAQzH,KAAK,SAASsD,UAAU,oCAAhC,UACE,oBAAGA,UAAU,gBACb,sDCvPJiC,GAAe,CACjBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIXoC,GAAO,CACTtB,KAAM,IAAIR,KACVS,OAAQ,IAICsB,GAAqB,WAE9B,IAAOzI,EAA0B2D,aAAa,SAAAvD,GAAK,OAAIA,EAAMQ,MAAtDZ,uBACA/B,EAAiB0F,aAAa,SAAAvD,GAAK,OAAIA,EAAMS,WAA7C5C,cAEP,EAAyDgH,GAASuD,IAAlE,oBAAQxB,EAAR,KAAoBzB,EAApB,KAAuCD,EAAvC,KAEO4B,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,OAEPxE,EAAWe,cAmCjB,OAEI,gBAAC,KAAD,CACI2D,OAAQrH,EACRsH,eAtCW,WACf3E,EAASqC,OAsCLuC,MAAO1B,GACP2B,eAAgB,IAJpB,UAQK,mDACD,wBACA,wBACI5D,UAAU,YACV6D,SA5Ca,SAAC9G,GACtBA,EAAE+G,iBAEF,IAAMgB,EAAgBzK,EAAc2I,aAAeO,EAASlJ,EAAc4I,OAAOnG,KAAI,SAAAiI,GAAI,OAAIA,EAAKxB,UAAQyB,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,IAAK,GAEvIjG,EAAI,uCACH5E,GACEyK,GAAe,GAAM,CAAEK,MAAM,IAF5B,IAGNlC,OAAO,GAAD,mBACH5I,EAAc4I,QADX,CAENG,MAIJrE,EAAU2B,GAAoBzB,IAE9BF,EAASqC,MACTrC,EAASiC,MACTU,EAAckD,KAwBV,UAKI,sBAAK5E,UAAU,aAAf,SACA,eAAC,KAAD,CACI+D,SA5BQ,SAAChH,GACrB4E,EAAkB,CACdC,OAAO,CACHhH,KAAM,OACNoH,MAAOjF,MAyBHiF,MAAOsB,EACPtD,UAAU,mBAKd,uBAAKA,UAAU,aAAf,UACA,2CACA,wBACItD,KAAK,SACLsD,UAAU,eACVgE,YAAY,mBACZpJ,KAAK,SACLqJ,aAAa,MACbjC,MAAOuB,EACPQ,SAAUpC,OAKd,0BAAQjF,KAAK,SAASsD,UAAU,oCAAhC,UACA,oBAAGA,UAAU,gBACb,sD,UC5GHoF,GAAkB,SAAC,GAAiB,IAAfnI,EAAc,EAAdA,QACxB8B,EAAWe,cAEThE,EAA+DmB,EAA/DnB,GAAIiH,EAA2D9F,EAA3D8F,eAAgBC,EAA2C/F,EAA3C+F,aAAcH,EAA6B5F,EAA7B4F,aAAcI,EAAehG,EAAfgG,OAAOkC,EAAQlI,EAARkI,KACzDjC,EAAqB,IAAIJ,KAAKD,GAK9BiC,EAAgB9B,EAAeC,EAAOnG,KAAI,SAAAiI,GAAI,OAAIA,EAAKxB,UAAQyB,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,IAAK,GAgBxG,OACI,gCACA,oCAAMnC,EAAN,OACA,oCAAMG,EAAmBmC,mBAAmB,SAA5C,OACA,oCAAMrC,EAAN,OACA,8BAEI,iCACI,iCAGQC,EAAOnG,KAAI,SAACmG,GACZ,IAAMqC,EAAa,IAAIxC,KAAKG,EAAOK,MAEnC,OADcL,EAAOM,OAET,gCACI,oCAAM+B,EAAWD,mBAAmB,SAApC,OACA,oCAAMpC,EAAOM,OAAb,SAFKN,EAAOsC,cAa5C,8BAAKJ,EAAO,YAAaL,IAEzB,gCACA,yBACI9E,UAAU,uBACVI,QA/CiB,SAACnD,GACtB8B,EAAUoC,MACVpC,EAAUgC,GAAiB9D,KA6CGuI,KAAK,GAAMvI,GAFzC,SAII,oBAAG+C,UAAU,wBAEjB,yBACIA,UAAU,iBACVI,QAhDiB,SAACtE,GACtBiD,ELuG0B,SAAEjD,GAChC,gDAAO,WAAMiD,GAAN,kBAAAC,EAAA,+EAIoBV,GAAc,kBAAD,OAAoBxC,GAAO,GAAI,UAJhE,cAIOmD,EAJP,gBAKoBA,EAAKC,OALzB,QAKOf,EALP,QAMSgB,GACJJ,EAASkC,GAAenF,IAExBuD,KAAKC,KAAK,QAASnB,EAAKoB,IAAK,SATlC,kDAYCE,QAAQC,IAAR,MAZD,0DAAP,sDKxGa+F,CAAmB3J,KA+CE0J,KAAK,GAAMvI,EAAQnB,IAFjD,SAII,oBAAGkE,UAAU,6BAGjB,yBACIA,UAAU,uBACVI,QAnDiB,SAACnD,GACtB8B,EJjBuC,CAAErC,KAAMxC,IIkB/C6E,EAAUgC,GAAiB9D,KAiDGuI,KAAK,GAAMvI,GAFzC,SAII,oBAAG+C,UAAU,6BA/CRlE,ICTX4J,GAAsB,SAAChL,GAAD,MAAgB,CACxCgC,KAAMxC,EACNyC,QAASjC,IAGPiL,GAAyB,iBAAO,CAClCjJ,KAAMxC,ICVG0L,GAAgB,WAC3B,IAAM7G,EAAWe,cACjB,EAAgEC,aAC9D,SAACvD,GAAD,OAAWA,EAAMS,WADX3C,EAAR,EAAQA,mBAAoBF,EAA5B,EAA4BA,YAAaG,EAAzC,EAAyCA,mBAGzC,EAAqCwF,aAAY,SAACvD,GAAD,OAAWA,EAAMU,WAA1DxC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,cACnB,EAAwB2G,oBAAS,GAAjC,oBAAO6D,EAAP,KAAaU,EAAb,KACA,EAAgCvE,mBAC9BlH,EAAYyC,QAAO,SAACiJ,GAAD,OAAOA,EAAEX,OAASA,MADvC,oBAAOY,EAAP,KAAiBC,EAAjB,KAIA3C,qBAAU,WACRtE,EAAS6B,GAAmBtG,MAC3B,CAACA,IAEJ+I,qBAAU,WACR2C,EAAY5L,EAAYyC,QAAO,SAACiJ,GAAD,OAAOA,EAAEX,OAASA,QAChD,CAAC/K,IAEJiJ,qBAAU,WACRtE,EDhCA,yCAAQ,WAAMA,GAAN,kBAAAC,EAAA,+EAEmBV,GAAe,UAAU,GAAG,QAF/C,cAEMW,EAFN,gBAGmBA,EAAKC,OAHxB,QAGMf,EAHN,QAIQgB,GACJJ,EAAU2G,GAAqBvH,EAAKzD,YAEpCqE,EAAU4G,MAPd,kDAUAlG,QAAQC,IAAR,MAVA,0DAAR,yDCiCC,IAGH2D,qBAAU,WACNtE,EAASuB,QACV,CAACA,KAEJ,IAAM2F,EAAUvL,EAAUoC,KAAI,SAACI,GAAD,MAAc,CAC1C8E,MAAO9E,EAAQrC,MACfqL,MAAOhJ,EAAQrC,UAuBXsL,EAAgB,SAAC9B,GACrB,OAAOA,EAAKvH,KAAI,SAACsJ,GACb,IAAM7C,EAAS6C,EAAGnD,OAAOnG,KAAI,SAACsJ,GAAD,OAAQA,EAAG7C,UAAQyB,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,IAAM,GACpF,OAAOkB,EAAGpD,aAAeO,MAIzB8C,EAAqB,SAACC,GAE1B,IAAIC,EAMEC,GAJFD,EADDD,EACO/L,EAAmBsC,QAAO,SAACiJ,GAAD,OAAQA,EAAEjL,QAASP,KAE7CC,GAEYsC,QAAO,SAAAuJ,GAAE,MAAmB,UAAfA,EAAGtL,YAChC2L,EAAUF,EAAI1J,QAAO,SAAAuJ,GAAE,MAAmB,QAAfA,EAAGtL,YAE9B4L,EAAiBP,EAAcK,GAC/BG,EAAeR,EAAcM,GAQnC,MAAQ,CAACG,iBAJeF,EAAe5J,KAAI,SAACsJ,GAAD,OAAQA,KAAIpB,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,IAAM,GAIhE2B,eAHLF,EAAa7J,KAAI,SAACsJ,GAAD,OAAQA,KAAIpB,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,IAAM,KAQzF,OACE,iCACE,eAAC,GAAD,IACA,2CAAavK,EAAcG,YAC3B,uBAAKkF,UAAU,oBAAf,UACE,iCACE,uBAAKA,UAAU,yBAAf,UACE,eAAC,KAAD,CACEiG,QAASA,EACTjE,MAAO,CAAEA,MAAO1H,EAAoB4L,MAAO5L,GAC3CyJ,SA9Da,SAAChH,GPoGY,IAAClC,EMvHRqC,ECoB7B6B,EAAS6B,GAAmB7D,EAAEiF,QAC9BjD,GPkGqClE,EOlGHkC,EAAEiF,MPkGY,CAChDtF,KAAMxC,EACNyC,QAAS9B,KOnGTkE,GDtB6B7B,ECsBHxC,EAAUoM,MAAK,SAACC,GAAD,OAAOA,EAAElM,QAAUkC,EAAEiF,SDtBpB,CAC1CtF,KAAMxC,EACNyC,QAASO,QCkFD,yBACE8C,UAAU,iCACVI,QA7DY,WACtBrB,EAASoC,OA0DD,4BAMA,8DAEE,wBACEvG,KAAK,OACL8B,KAAK,WACLsK,QAAS7B,EACTpB,SAnEU,SAAChH,GACvB8I,EAAQ9I,EAAE6E,OAAOoF,SACjBhB,EACEjJ,EAAE6E,OAAOoF,QACL5M,EACAA,EAAYyC,QAAO,SAACiJ,GAAD,OAAkB,IAAXA,EAAEX,kBAmE5B,sBAAKnF,UAAU,uBAAf,SAEE,yBAAOA,UAAU,uBAAjB,UACI,iCACI,gCACI,qBAAIiH,MAAM,QACV,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,sBAGR,mCACI,gCACI,8BACI,wDAEJ,8BAAKZ,GAAmB,GAAOO,mBAC/B,8BAAKP,GAAmB,GAAOQ,oBAInC,gCACI,8BACI,2CAAavM,EAAb,UAGJ,8BAAK+L,GAAmB,GAAMO,mBAC9B,8BAAKP,GAAmB,GAAMQ,+BAU9C,sBAAK7G,UAAU,uBAAf,SACE,yBAAOA,UAAU,uBAAjB,UACE,iCACE,gCACE,qBAAIiH,MAAM,MAAV,yBACA,qBAAIA,MAAM,MAAV,4BACA,qBAAIA,MAAM,MAAV,yBACA,qBAAIA,MAAM,MAAV,sBACA,6CAGJ,iCACGlB,EAASjJ,KAAI,SAACG,GAAD,OACZ,eAAC,GAAD,CAAkCA,QAASA,GAArBA,EAAQnB,cAKtC,eAAC,GAAD,IACA,eAAC,GAAD,WCvLKoL,I,OAAc,WACvB,IAAMnI,EAAWe,cAEjB,EAA0CuB,GAAS,CAC/C5G,KAAM,GACN0M,SAAU,KAFd,oBAAQ/D,EAAR,KAAoBgE,EAApB,KAMQ3M,EAAmB2I,EAAnB3I,KAAM0M,EAAa/D,EAAb+D,SAQd,OACI,sBAAKnH,UAAU,4BAAf,SACI,sBAAKA,UAAU,MAAf,SACI,uBAAKA,UAAU,wBAAf,UACI,0CACA,wBAAM6D,SAXD,SAAC9G,GAClBA,EAAE+G,iBAEF/E,EXdkB,SAAEtE,EAAM0M,GAC9B,gDAAO,WAAOpI,GAAP,kBAAAC,EAAA,sEAEgBnB,GAAc,OAAO,CAACpD,OAAM0M,YAAU,QAFtD,cAEGlI,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGf,EAHH,QAIMgB,IACLX,aAAa6I,QAAQ,QAAQlJ,EAAKI,OAClCC,aAAa6I,QAAQ,mBAAkB,IAAIvE,MAAOwE,WAElDvI,EAASJ,GAAM,CACXlE,KAAM0D,EAAK1D,SAGf4E,KAAKC,KAAK,QAASnB,EAAKoB,IAAK,SAZ9B,2CAAP,sDWaagI,CAAW9M,EAAK0M,KAQb,UACI,sBAAKnH,UAAU,aAAf,SACI,wBACItD,KAAK,OACLsD,UAAU,eACVgE,YAAY,OACZpJ,KAAK,OACLqJ,aAAa,MACbjC,MAAOvH,EACPsJ,SAAUqD,MAGlB,sBAAKpH,UAAU,aAAf,SACI,wBACItD,KAAK,WACLsD,UAAU,eACVgE,YAAY,gBACZpJ,KAAK,WACLqJ,aAAa,MACbjC,MAAOmF,EACPpD,SAAUqD,MAGlB,sBAAKpH,UAAU,aAAf,SACI,wBACItD,KAAK,SACLsD,UAAU,YACVgC,MAAM,wBCnDzBwF,GAAiB,WAE1B,MAAwFzH,aAAY,SAAAvD,GAAK,OAAIA,EAAMD,QAA5GxB,WAAYE,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,aAAcI,EAAxC,EAAwCA,YAAaC,EAArD,EAAqDA,QAASI,EAA9D,EAA8DA,iBAAkBE,EAAhF,EAAgFA,IAI1E4L,EAAqB,IAAI3E,KAAK5H,EAAaE,OAC3CsM,EAAoB,IAAI5E,KAAKxH,EAAYF,OACzCuM,EAAyB,IAAI7E,KAAKnH,EAAiBP,OAGzD,OACI,+BACI,uBAAK4E,UAAU,0BAAf,UACI,oCAAM/E,EAAN,OACA,2CACA,yBAAO+E,UAAU,QAAjB,UACI,iCACI,gCACI,qBAAIiH,MAAM,MAAV,oBAEA,qBAAIA,MAAM,MAAV,6BACA,qBAAIA,MAAM,MAAV,8BAGR,mCACI,gCACI,8BAAK/L,EAAaC,SAElB,8BAEWD,EAAaE,MACfqM,EAAmBpC,mBAAmB,SACrC,KAIV,8BAAKnK,EAAaG,QAEtB,gCAEI,8BAAKC,EAAYH,SAEjB,8BAEWG,EAAYF,MACbsM,EAAkBrC,mBAAmB,SACrC,KAGV,8BAAK/J,EAAYD,cAQ7B,2CACA,yBAAO2E,UAAU,QAAjB,UACI,iCACI,gCACI,qBAAIiH,MAAM,MAAV,oBACA,qBAAIA,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,yBACA,qBAAIA,MAAM,MAAV,yBAGR,iCACI,gCACI,8BAAK1L,EAAQJ,SACb,8BAAKI,EAAQC,OACb,8BAAKD,EAAQE,cACb,8BAAKF,EAAQG,iBAKzB,gDACA,yBAAOsE,UAAU,QAAjB,UACI,iCACI,gCACI,qBAAIiH,MAAM,MAAV,0BACA,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,8BAGR,iCACI,gCACI,8BAAKtL,EAAiBC,UACtB,8BAEWD,EAAiBP,MAClBuM,EAAuBtC,mBAAmB,SAC1C,KAIV,8BAAK1J,EAAiBN,aAMtC,iDACI,6BAAIQ,UCnGP+L,I,OAAe,WAExB,IAAMC,EAAa9H,aAAY,SAAAvD,GAAK,OAAIA,EAAMD,KAAKxB,WAAWC,SAExD+D,EAAWe,cACjB,EAA0CuB,GAAS,CAC/CrG,MAAO,KADX,oBAAQoI,EAAR,KAAoBgE,EAApB,KAIOpM,EAASoI,EAATpI,MAYP,OACI,iCACI,eAAC,GAAD,IACA,uBAAKgF,UAAU,mBAAf,UACI,sBAAKA,UAAU,aAAf,SACI,wBAAM6D,SAfG,SAAC9G,GAEtB,GADAA,EAAE+G,iBACY,KAAV9I,EACA,OAAOqE,KAAKC,KAAK,QAAS,mBAAoB,SAGlDP,EAASD,GAAgB9D,KASb,UACI,oDACA,wBACI0B,KAAK,OACLsH,YAAY,sBACZpJ,KAAK,QACLqJ,aAAa,MACbjC,MAAOhH,EACP8M,UAAU,IACV/D,SAAUqD,IAGtB,0BACI1K,KAAK,SACLsD,UAAU,+BAFd,UAII,oBAAGA,UAAU,kBACb,sDAMG6H,GAAgB,eAAC,GAAD,YClCjCE,I,OAAgB,SAAClL,GAAD,MAAa,CAC/BH,KAAMxC,EACNyC,QAASE,KAuBPmL,GAAgB,SAACnL,GAAD,MAAa,CAC/BH,KAAMxC,EACNyC,QAASE,IAMAoL,GAAoB,SAAC3E,GAC9B,gDAAQ,WAAMvE,GAAN,kBAAAC,EAAA,+EAEmBV,GAAe,kBAAkB,CAACgF,QAAM,QAF3D,cAEMrE,EAFN,gBAGmBA,EAAKC,OAHxB,QAGMf,EAHN,QAIQgB,GACJJ,EAAUmJ,GAAoB/J,EAAKgK,UAEnCpJ,EAAUqJ,MAPd,kDAUA3I,QAAQC,IAAR,MAVA,0DAAR,uDAeEwI,GAAqB,SAAEC,GAAF,MAAe,CACtCzL,KAAMxC,EACNyC,QAASwL,IAEPC,GAAwB,iBAAM,CAChC1L,KAAMxC,IASGmO,GAAuB,iBAAO,CACvC3L,KAAMxC,IAuBJoO,GAAgB,SAACxM,GAAD,MAAS,CAC3BY,KAAMxC,EACNyC,QAAUb,IAKDyM,GAAyB,SAACjF,GAAD,MAAW,CAC7C5G,KAAMxC,EACNyC,QAAS2G,IC5GPrB,GAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIfC,KAAMC,cAAc,SAEpB,IAAMuD,GAAU,CACd,CAAEjE,MAAO,SAAUkE,MAAO,UAC1B,CAAElE,MAAO,OAAQkE,MAAO,QACxB,CAAElE,MAAO,cAAekE,MAAO,eAC/B,CAAElE,MAAO,SAAUkE,MAAO,WAKfsC,GAAc,WACzB,IAAMzJ,EAAWe,cAEP5D,EAAoB6D,aAAa,SAAAvD,GAAK,OAAIA,EAAMQ,MAAhDd,gBACR,EAAwC6D,aAAY,SAAAvD,GAAK,OAAIA,EAAMK,UAA5DZ,EAAP,EAAOA,aAAaF,EAApB,EAAoBA,iBAEhB0M,EAAa,CACjBnF,KAAMvH,EACN2M,WAAY,GACZ7N,MAAO,GACP8N,KAAM,GACNC,YAAa,CAAC,CAAC5G,MAAO,MAIxB,EAAyDX,GAAWpF,GAA8BwM,GAAlG,oBAAQrF,EAAR,KAAoBzB,EAApB,KAAuCD,EAAvC,KACO4B,EAA8CF,EAA9CE,KAAKoF,EAAyCtF,EAAzCsF,WAAY7N,EAA6BuI,EAA7BvI,MAAO8N,EAAsBvF,EAAtBuF,KAAMC,EAAgBxF,EAAhBwF,YAErCvF,qBAAU,WACR1B,EAAkB,CAChBC,OAAO,CACHhH,KAAM,OACNoH,MAAOjG,OAGZ,CAACA,IAEJsH,qBAAU,WACR3B,EAAezF,KAEhB,CAACA,IAGF,IAsBMuH,EAAa,WAEhBzE,EXxFoC,CAAErC,KAAMxC,IWyF5C2O,YAAW,WACF5M,GACL8C,EAASsJ,MAGX3G,EAAe+G,KAEf,MAoBCK,EAAiB,WACrBnH,EAAkB,CACdC,OAAO,CACHhH,KAAM,cACNoH,MAAM,GAAD,mBAAM4G,GAAN,CAAmB,CAAC5G,MAAO,UA2B1C,OACE,gBAAC,KAAD,CACEyB,OAAQvH,EACRwH,eAAiBF,EACjBG,MAAO1B,GACP2B,eAAgB,IAJlB,UAQE,oCAAM3H,EAAe,gBAAkB,eAAvC,OACA,wBACA,wBACE+D,UAAU,YACV6D,SA/BmB,SAAC9G,GAGxB,GAFAA,EAAE+G,kBAEER,IAASoF,IAAe7N,IAAU8N,EACpC,OAAOtJ,KAAKC,KAAK,QAAS,+BAAgC,SD1G/B,IAAEzC,EC6G1BZ,GACH8C,GD9G6BlC,EC8GAuG,ED7G/B,yCAAO,WAAMrE,GAAN,kBAAAC,EAAA,+EAEoBV,GAAc,mBAAD,OAAoBzB,EAAOf,IAAKe,EAAQ,OAFzE,cAEOoC,EAFP,gBAGoBA,EAAKC,OAHzB,QAGOf,EAHP,QAKWgB,IACNJ,EAAUiJ,GAAe7J,EAAKtB,SAC9BwC,KAAKC,KAAK,cAAc,2BAAyB,YAEjDD,KAAKC,KAAK,QAASnB,EAAKoB,IAAK,SATlC,kDAaCE,QAAQC,IAAR,MAbD,0DAAP,wDC8GEX,EAASsJ,OAETtJ,EDzI2B,SAAElC,GAC/B,gDAAO,WAAMkC,GAAN,kBAAAC,EAAA,+EAEoBV,GAAc,sBAAsBzB,EAAQ,QAFhE,cAEOoC,EAFP,gBAGoBA,EAAKC,OAHzB,QAGOf,EAHP,QAKSgB,KACJJ,EAASgJ,GAAc5J,EAAKtB,SAC5BwC,KAAKC,KAAK,WAAW,wBAAsB,YAPhD,kDAWCG,QAAQC,IAAR,MAXD,0DAAP,sDCwIYqJ,CAAkB3F,IAG9BI,KAeE,UAKE,uBAAKxD,UAAU,aAAf,UACE,oDACA,eAAC,KAAD,CACEiG,QAASA,GACTjE,MAAO0G,EAAW1G,MAClB+B,SAxGgB,SAAEhH,GAC1B4E,EAAkB,CACdC,OAAO,CACHhH,KAAM,aACNoH,MAAOjF,EAAEiF,eAwGb,uBAAKhC,UAAU,aAAf,UACE,2CACA,wBACEtD,KAAK,OACLsD,UAAU,eACVgE,YAAY,sBACZpJ,KAAK,QACLqJ,aAAa,MACbjC,MAAOnH,EACPkJ,SAAUpC,OAGd,uBAAK3B,UAAU,aAAf,UACE,+CACA,wBACEtD,KAAK,OACLsD,UAAU,eACVgE,YAAY,sBACZpJ,KAAK,OACLqJ,aAAa,MACbjC,MAAO2G,EACP5E,SAAUpC,OAGd,uBAAK3B,UAAU,aAAf,UACE,kDAEE4I,EAAY9L,KAAI,SAACoH,EAAGC,GAClB,OACE,uBAAKnE,UAAU,eAAf,UACI,sBAAKA,UAAU,WAAf,SACI,wBACIiE,aAAa,MACbrJ,KAAK,QACLoJ,YAAY,2BACZhE,UAAU,eACVgC,MAAOkC,EAAElC,MACT+B,SAAU,SAAAhH,GAAC,OAvIP,SAACA,EAAGqH,GAChC,MAAwBrH,EAAE6E,OAAlBhH,EAAR,EAAQA,KAAMoH,EAAd,EAAcA,MACRqC,EAAI,YAAOuE,GACjBvE,EAAKD,GAAOxJ,GAAQoH,EACpBL,EAAkB,CACdC,OAAO,CACHhH,KAAM,cACNoH,MAAOqC,KAgIwBG,CAAsBzH,EAAGoH,QAGhD,sBAAKnE,UAAU,gBAAf,SAE2B,IAAvB4I,EAAYnE,QAER,yBACIzE,UAAU,8BAEVI,QAAS,SAACrD,GAAD,OAvHb,SAACA,EAAGqH,GAC5BrH,EAAE+G,iBACF,IAAMO,EAAI,YAAOuE,GAEjBvE,EAAKK,OAAON,EAAO,GAEnBzC,EAAkB,CACdC,OAAO,CACHhH,KAAM,cACNoH,MAAOqC,KA8G4BM,CAAkB5H,EAAEoH,IAHvC,SAIQ,oBAAGnE,UAAU,qBAK7B,sBAAKA,UAAU,gBAAf,SAEQ4I,EAAYnE,OAAS,IAAMN,GAEvB,yBACAzH,KAAK,SACLsD,UAAW,+BACXI,QAAS0I,EAHT,SAIQ,oBAAG9I,UAAU,cAAb,qBAhCUmE,SA4C1C,0BAAQzH,KAAK,SAASsD,UAAU,oCAAhC,UACE,oBAAGA,UAAU,gBACb,sD,UChPGgJ,GAAuB,WAClC,IAAMjK,EAAWe,cACT9D,EAAe+D,aAAY,SAACvD,GAAD,OAAWA,EAAMK,UAA5Cb,WAER,EAAoCsF,mBAAS,IAAIwB,MAAjD,oBAAOmG,EAAP,KAAmBC,EAAnB,KAaMC,EAAmB,SAACtM,GACxBkC,EAAUmC,MACVnC,EFqD2B,SAAClC,GAAD,MAAa,CACxCH,KAAMxC,EACNyC,QAASE,GEvDCuM,CAAgBvM,KAGtBwM,EAAmB,SAACvN,GACxBiD,EF0D6B,SAAEjD,GAC/B,gDAAO,WAAMiD,GAAN,kBAAAC,EAAA,+EAGoBV,GAAc,0BAAD,OAA4BxC,GAAO,GAAI,UAHxE,cAGOmD,EAHP,gBAIoBA,EAAKC,OAJzB,QAIOf,EAJP,QAKSgB,GACJJ,EAASuJ,GAAcxM,IAEvBuD,KAAKC,KAAK,QAASnB,EAAKoB,IAAK,SARlC,kDAWCE,QAAQC,IAAR,MAXD,0DAAP,sDE3DS4J,CAAkBxN,KAY7B,OATAuH,qBAAU,WACRtE,EAASwJ,GAAuBU,MAC/B,IAGH5F,qBAAU,WACRtE,EAASkJ,GAAkBgB,MAC1B,CAAClK,EAAUkK,IAGZ,iCACE,eAAC,GAAD,IAEA,uBAAKjJ,UAAU,mBAAf,UACE,uBAAKA,UAAU,oBAAf,UACE,eAAC,KAAD,CAAY+D,SA/BK,SAAChH,GACxBmM,EAAcnM,GACdgC,EAASwJ,GAAuBxL,IAChCgC,EAASkJ,GAAkBlL,KA4BmBiF,MAAOiH,IAC/C,yBAAQjJ,UAAU,uBAAuBI,QApCzB,WACtBrB,EAAUmC,OAmCJ,6BAMF,sBAAKlB,UAAU,sBAAf,SACE,yBAAOA,UAAU,uBAAjB,UACE,iCACE,gCACE,qBAAIiH,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,kBACA,qBAAIA,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,uBACA,qBAAIA,MAAM,MAAV,gCAGJ,iCACGjL,EAAWc,KAAI,SAACD,GACf,IAAM0M,EAAa,IAAIzG,KAAKjG,EAAOyG,MACnC,OACE,gCACE,8BAAKiG,EAAWlE,mBAAmB,WACnC,oCAAMxI,EAAO6L,WAAb,OACA,oCAAM7L,EAAOhC,MAAb,OACA,oCAAMgC,EAAO8L,KAAb,OACA,8BACE,8BACG9L,EAAO+L,YAAY9L,KAAI,SAACiI,GACvB,OACA,8BAAqBA,EAAK/C,OAAjB+C,EAAKQ,YAIpB,gCACE,yBACEvF,UAAU,uBACVI,QAAS+I,EAAiB3D,KAAK,GAAM3I,GAFvC,SAIE,oBAAGmD,UAAU,wBAEf,yBACEA,UAAU,iBACVI,QAASiJ,EAAiB7D,KAAK,GAAM3I,EAAOf,IAF9C,SAIE,oBAAGkE,UAAU,kCAxBVnD,EAAOf,cAkC1B,eAAC,GAAD,WCjGK0N,I,OAAiB,WAE1B,IAAMzK,EAAWe,cACV/E,EAAcgF,aAAY,SAAAvD,GAAK,OAAIA,EAAMD,QAAzCxB,WACP,EAAyDsG,GAAQtG,GAAjE,oBAAQqI,EAAR,KAAoBzB,EAApB,KAAuCD,EAAvC,KACO5F,EAAgFsH,EAAhFtH,GAAId,EAA4EoI,EAA5EpI,MAAOC,EAAqEmI,EAArEnI,MAAOY,EAA8DuH,EAA9DvH,IAAKX,EAAyDkI,EAAzDlI,aAAcI,EAA2C8H,EAA3C9H,YAAaC,EAA8B6H,EAA9B7H,QAASI,EAAqByH,EAArBzH,iBAElE,EAAgD2F,mBAAS,IAAzD,oBAAOmI,EAAP,KAAyBC,EAAzB,KACA,EAA8CpI,mBAAS,IAAvD,oBAAOqI,EAAP,KAAwBC,EAAxB,KACA,EAAkDtI,mBAAS,IAA3D,oBAAOuI,EAAP,KAA0BC,EAA1B,KAEA,EAAwCxI,oBAAS,GAAjD,oBAAOyI,EAAP,KAAqBC,EAArB,KAEA,EAAoC1I,oBAAS,GAA7C,oBAAO2I,EAAP,KAAmBC,EAAnB,KACA,EAAoC5I,oBAAS,GAA7C,oBAAO6I,EAAP,KAAmBC,EAAnB,KAIA/G,qBAAU,WACN3B,EAAe3G,KAEhB,CAACA,IA2EJ,OACI,iCACI,eAAC,GAAD,IACJ,sBAAKiF,UAAU,qBAAf,SACI,uBAAKA,UAAU,eAAf,UACI,8DACA,wBAAM6D,SA9EG,SAAC9G,GAElB,OADAA,EAAE+G,iBACyB,IAAxB9I,EAAMqP,OAAO5F,QAEZyF,GAAc,GACP7K,KAAKC,KAAK,QAAS,mCAAoC,WAElE4K,GAAc,GAEa,IAAxBjP,EAAMoP,OAAO5F,QAEZ2F,GAAc,GACP/K,KAAKC,KAAK,QAAS,qCAAsC,WAEpE8K,GAAc,QAEVrL,EADM,KAAPjD,GhBhBsBS,EgBiBK6G,EhBhBlC,yCAAO,WAAOrE,GAAP,gBAAAC,EAAA,+EAEoBV,GAAc,WAAY/B,EAAM,QAFpD,cAEO0C,EAFP,gBAGoBA,EAAKC,OAHzB,cAISC,KACJJ,EAASY,GAAWpD,IACpB8C,KAAKC,KAAK,WAAW,wBAAsB,YANhD,kDASCG,QAAQC,IAAR,MATD,0DAAP,uDA0B2B,SAACnD,GAC5B,gDAAO,WAAOwC,GAAP,kBAAAC,EAAA,+EAEoBV,GAAc,QAAD,OAAS/B,EAAKT,IAAKS,EAAM,OAF1D,cAEO0C,EAFP,gBAGoBA,EAAKC,OAHzB,QAGOf,EAHP,QAKUgB,IACLJ,EAASa,GAAYrD,IACrB8C,KAAKC,KAAK,cAAc,2BAAyB,YAEjDD,KAAKC,KAAK,QAASnB,EAAKoB,IAAK,SATlC,kDAaCE,QAAQC,IAAR,MAbD,0DAAP,sDgBTiB4K,CAAiBlH,MhBnBP,IAAE7G,GgB+EjB,UACI,uBAAKyD,UAAU,aAAf,UACI,wBACQtD,KAAK,OACLsD,UAAS,iBAAYiK,GAAc,cACnCjG,YAAY,sBACZpJ,KAAK,QACLqJ,aAAa,MACb6D,UAAU,IACV9F,MAAOhH,EACP+I,SAAUpC,EACV4C,SAAUwF,GAAe,aAE7B,yBAAQ/J,UAAU,uBAAuBI,QApC3C,SAACrD,GACnBA,EAAE+G,iBACFkG,GAAgB,GAChBjL,EAASD,GAAgB9D,KAiCL,oBACA,yBAAQgF,UAAU,uBAAuBI,QA/B5C,SAACrD,GAClBA,EAAE+G,iBACFkG,GAAgB,GAChBjL,EAASS,MAGTkK,EAAoB,IACpBE,EAAmB,IACnBE,EAAqB,KAuBD,sBAER,sBAAK9J,UAAU,aAAf,SACI,wBACItD,KAAK,OACLsD,UAAS,wBAAmBmK,GAAc,cAC1CnG,YAAY,eACZpJ,KAAK,QACLqJ,aAAa,MACbjC,MAAO/G,EACP8I,SAAUpC,EACV4C,UAAWwF,GAAe,eAMlC,uBAAK/J,UAAU,MAAf,UACI,sBAAKA,UAAU,MAAf,SACI,wDAEJ,sBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACI,wBACItD,KAAK,OACLsD,UAAU,eACVgE,YAAY,eACZpJ,KAAK,sBACLqJ,aAAa,MACbjC,MAAO9G,EAAaC,OACpB4I,SAAUpC,EACV4C,UAAWwF,GAAe,iBAItC,sBAAK/J,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACS,eAAC,KAAD,CACG+D,SA1GD,SAAChH,GAChC2M,EAAoB3M,GACpB4E,EAAkB,CACdC,OAAO,CACHhH,KAAM,qBACNoH,MAAOjF,MAsGiBiF,MAAOyH,EACPzJ,UAAU,eACVuE,UAAWwF,QAI3B,sBAAK/J,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACI,wBACItD,KAAK,OACLsD,UAAU,eACVgE,YAAY,oBACZpJ,KAAK,kBACLqJ,aAAa,MACbjC,MAAO9G,EAAaG,GACpB0I,SAAUpC,EACV4C,UAAWwF,GAAe,oBAU1C,uBAAK/J,UAAU,MAAf,UACI,sBAAKA,UAAU,MAAf,SACI,uDAEJ,sBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACI,wBACItD,KAAK,OACLsD,UAAU,eACVgE,YAAY,cACZpJ,KAAK,qBACLqJ,aAAa,MACbjC,MAAO1G,EAAYH,OACnB4I,SAAUpC,EACV4C,UAAWwF,GAAe,iBAItC,sBAAK/J,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACY,eAAC,KAAD,CACI+D,SAhJN,SAAChH,GAC/B6M,EAAmB7M,GACnB4E,EAAkB,CACdC,OAAO,CACHhH,KAAM,oBACNoH,MAAOjF,MA4IqBiF,MAAO2H,EACP3J,UAAU,eACVuE,UAAWwF,QAI/B,sBAAK/J,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACI,wBACItD,KAAK,OACLsD,UAAU,eACVgE,YAAY,mBACZpJ,KAAK,iBACLqJ,aAAa,MACbjC,MAAO1G,EAAYD,GACnB0I,SAAUpC,EACV4C,UAAWwF,GAAe,oBAO1C,uBAAK/J,UAAU,MAAf,UACI,sBAAKA,UAAU,MAAf,SACI,gDAEJ,sBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACI,wBACItD,KAAK,OACLsD,UAAU,eACVgE,YAAY,gBACZpJ,KAAK,iBACLqJ,aAAa,MACbjC,MAAOzG,EAAQJ,OACf4I,SAAUpC,EACV4C,UAAWwF,GAAe,iBAItC,sBAAK/J,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACI,wBACItD,KAAK,OACLsD,UAAU,eACVgE,YAAY,cACZpJ,KAAK,eACLqJ,aAAa,MACbjC,MAAOzG,EAAQC,KACfuI,SAAUpC,EACV4C,UAAWwF,GAAe,iBAItC,sBAAK/J,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACI,wBACItD,KAAK,OACLsD,UAAU,eACVgE,YAAY,qBACZpJ,KAAK,sBACLqJ,aAAa,MACbjC,MAAOzG,EAAQE,YACfsI,SAAUpC,EACV4C,UAAWwF,GAAe,iBAItC,sBAAK/J,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACI,wBACItD,KAAK,OACLsD,UAAU,eACVgE,YAAY,gBACZpJ,KAAK,iBACLqJ,aAAa,MACbjC,MAAOzG,EAAQG,OACfqI,SAAUpC,EACV4C,UAAWwF,GAAe,oBAQ1C,uBAAK/J,UAAU,MAAf,UACI,sBAAKA,UAAU,MAAf,SACI,4DAEJ,sBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACI,wBACItD,KAAK,OACLsD,UAAU,eACVgE,YAAY,sBACZpJ,KAAK,2BACLqJ,aAAa,MACbjC,MAAOrG,EAAiBC,QACxBmI,SAAUpC,EACV4C,UAAWwF,GAAe,iBAKtC,sBAAK/J,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACY,eAAC,KAAD,CACI+D,SApPJ,SAAChH,GACjC+M,EAAqB/M,GACrB4E,EAAkB,CACdC,OAAO,CACHhH,KAAM,yBACNoH,MAAOjF,MAgPqBiF,MAAO6H,EACP7J,UAAU,eACVuE,UAAWwF,QAI/B,sBAAK/J,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,SACI,wBACItD,KAAK,OACLsD,UAAU,eACVgE,YAAY,uBACZpJ,KAAK,sBACLqJ,aAAa,MACbjC,MAAOrG,EAAiBN,GACxB0I,SAAUpC,EACV4C,UAAWwF,GAAe,oBAO1C,wBACQrN,KAAK,OACLsD,UAAU,eACVgE,YAAY,gBACZpJ,KAAK,MACLqJ,aAAa,MACbjC,MAAOnG,EACPkI,SAAUpC,EACV4C,UAAWwF,GAAe,aAGlC,sBAAK/J,UAAU,aAAf,SACI,wBACItD,KAAK,SACLsD,UAAU,YACVgC,MAAM,UACNuC,UAAWwF,GAAe,4B,4CCpWzCQ,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBAEF,OACI,eAAC,KAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACNJ,EACE,eAACC,EAAD,eAAgBG,IAChB,eAAC,KAAD,CAAU3K,GAAG,W,mCCXpB4K,GAAc,SAAC,GAIrB,IAHHL,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBAEF,OACI,eAAC,KAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACNJ,EACM,eAAC,KAAD,CAAUvK,GAAG,cACb,eAACwK,EAAD,eAAgBG,SCC3BE,GAAY,WAErB,IAAOrQ,EAAQsF,aAAY,SAAAvD,GAAK,OAAIA,EAAMI,QAAnCnC,KAEDsE,EAAWe,cAUjB,OARAuD,qBAAU,WACNtE,EpBAJ,yCAAO,WAAMA,GAAN,kBAAAC,EAAA,sEAEgBV,GAAc,aAAa,GAAG,QAF9C,cAEGW,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGf,EAHH,QAKMgB,IACLX,aAAa6I,QAAQ,QAAQlJ,EAAKI,OAClCC,aAAa6I,QAAQ,mBAAkB,IAAIvE,MAAOwE,WAElDvI,EAASJ,GAAM,CACXlE,KAAM0D,EAAK1D,SAGfsE,EAASL,MAbV,2CAAP,yDoBCG,CAACK,IAOA,eAAC,KAAD,UACI,+BACI,gBAAC,KAAD,WACI,eAAC,GAAD,CACIoB,OAAK,EACL4K,KAAK,IACLL,UAAW9C,GACX4C,kBAAmB/P,IAEvB,eAAC,GAAD,CACI0F,OAAK,EACL4K,KAAK,SACLL,UAAWxD,GACXsD,kBAAmB/P,IAEvB,eAAC,GAAD,CACI0F,OAAK,EACL4K,KAAK,YACLL,UAAWlB,GACXgB,kBAAmB/P,IAEvB,eAAC,GAAD,CACI0F,OAAK,EACL4K,KAAK,kBACLL,UAAW1B,GACXwB,kBAAmB/P,IAEvB,eAAC,GAAD,CACI0F,OAAK,EACL4K,KAAK,WACLL,UAAW9E,GACX4E,kBAAmB/P,IAEvB,eAAC,KAAD,CAAUwF,GAAG,cC5DpB+K,GAAc,WACvB,OACI,eAAC,IAAD,CAAUzN,MAAQA,GAAlB,SACI,eAAC,GAAD,OCJZ0N,IAASC,OAEL,eAAC,GAAD,IAEFC,SAASC,eAAe,U","file":"static/js/main.d50fd72d.chunk.js","sourcesContent":["export const types = {\r\n\r\n    \r\n    \r\n    dataStartAddNew: '[data] Data Start add new',\r\n    dataAddNew: '[data] Add new data',\r\n    dataResult: '[data] Data Search Result',\r\n    dataUpdated: '[data] Data Update',\r\n    datainitialState: '[data] Initial State',\r\n    \r\n    \r\n    changeFilterDate: '[filter] Change Filter Search Date',\r\n    \r\n    uiOpenFilterModal: '[ui] Open Filter Modal',\r\n    uiCloseFilterModal: '[ui] Close Filter Modal',\r\n    uiOpenAccountModal: '[ui] Open Account Modal',\r\n    uiCloseAccountModal: '[ui] Close Account Modal',\r\n    uiOpenAccountRecordModal: '[ui] Open  Record Account Modal',\r\n    uiCloseAccountRecordModal: '[ui] Close Record Account Modal',\r\n\r\n    filterSetActive: '[filter] Set Active',\r\n    filterClearActiveFilter: '[filter] Clear active Filter',\r\n    filterAddNew: '[filter] Add new',\r\n    filterUpdated: '[filter] Filter Updated',\r\n    filterDeleted: '[filter] Filter Deleted',\r\n    filterLoaded: '[filter] Filter List Loaded',\r\n    filterNotResult: '[filter] Filter List Not Result',\r\n    \r\n    changeAccountBrand: '[account] Change Account Brand',\r\n    openAccountModal: '[account] Open Account Modal',\r\n    closeAccountModal: '[account] Close Account Modal',\r\n\r\n    accountSetActive: '[account] Set Active',\r\n    accountClearActiveAccount: '[account] Clear active Account',\r\n    accountAddNew: '[account] Add new account',\r\n    accountUpdated: '[account] Account Updated',\r\n    accountDeleted: '[account] Account Deleted',\r\n    accountLoaded: '[account] Account List Loaded',\r\n    accountNotResult: '[account] Account List Not Result',\r\n    accountListNotPaid: '[account] Account List Not Paid', \r\n    accountclearListNotPaid: '[account] Account Clear List Not Paid',\r\n\r\n    companyAddNew: '[company] Add new company',\r\n    companyUpdated: '[company] Company Updated',\r\n    companyDeleted: '[company] Company Deleted',\r\n    companyLoaded: '[company] Company List Loaded',\r\n    companyNotResult: '[company] Company List Not Result',\r\n    companySetActive: '[company] Set Active',\r\n    companyClearActiveCompany: '[company] Clear active Company',\r\n\r\n\r\n    authCheckingFinish: '[auth] FinishChecking login State',\r\n    authStartlogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartTokenRenew: '[auth] start token renew',\r\n    authLogout: '[auth] Logout'\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    accountList: [],\r\n    accountActive: null,\r\n    accountSearchBrand: 'CASTROL',\r\n    accountListNotPaid: []\r\n}\r\n\r\nexport const accountReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.accountLoaded:\r\n            return {\r\n                ...state,\r\n                accountList: [ ...action.payload ]\r\n            }\r\n\r\n        case types.accountAddNew:\r\n            return {\r\n                ...state,\r\n                accountList:[\r\n                    ...state.accountList,\r\n                    action.payload\r\n                ]\r\n            }\r\n        \r\n        case types.accountUpdated:\r\n            return {\r\n                ...state,\r\n                accountList: state.accountList.map(\r\n                    e => (e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.accountSetActive:\r\n            return {\r\n                ...state,\r\n                accountActive: action.payload\r\n            }\r\n        case types.accountClearActiveAccount:\r\n            return {\r\n                ...state,\r\n                accountActive: null\r\n            }\r\n\r\n        case types.accountDeleted:\r\n            return {\r\n                ...state,\r\n                accountList: state.accountList.filter(\r\n                   e => (e.id !== action.payload )\r\n                )\r\n            }\r\n\r\n        case types.accountNotResult:\r\n            return {\r\n                ...state,\r\n                accountList: []\r\n            }\r\n\r\n\r\n        case types.changeAccountBrand:\r\n            return {\r\n                ...state,\r\n                accountSearchBrand: action.payload\r\n            }\r\n\r\n        case types.accountListNotPaid:\r\n            return {\r\n                ...state,\r\n                accountListNotPaid: [ ...action.payload ]\r\n            }\r\n\r\n        case types.accountclearListNotPaid:\r\n            return {\r\n                ...state,\r\n                accountListNotPaid: []\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    nick: null\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    companies: [],\r\n    companyActive: {\r\n        name:\"INCAMOTORS\",\r\n        brand:\"CASTROL\",\r\n        currency:\"DOLAR\",\r\n\r\n    }\r\n}\r\n\r\nexport const companyReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.companyLoaded:\r\n            return {\r\n                ...state,\r\n                companies: [...action.payload]\r\n            }\r\n        case types.companyNotResult:\r\n            return {\r\n                ...state,\r\n                companies: []\r\n            }\r\n\r\n        case types.companySetActive:\r\n            return {\r\n                ...state,\r\n                companyActive: action.payload\r\n            }\r\n        case types.companyClearActiveCompany:\r\n            return {\r\n                ...state,\r\n                companyActive: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    searchData: {\r\n        placa: '',\r\n        marca: '',\r\n        aceite_motor: {\r\n            aceite: '',\r\n            fecha: '',\r\n            km: ''\r\n        },\r\n        aceite_caja: {\r\n            aceite: '',\r\n            fecha: '',\r\n            km: ''\r\n        },\r\n        filtros:{\r\n            aceite: '',\r\n            aire: '',\r\n            combustible: '',\r\n            cabina: ''\r\n        },\r\n        liquido_radiador: {\r\n            liquido: '',\r\n            fecha: '',\r\n            km: ''\r\n        },\r\n        obs: '',\r\n        id: ''\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const dataAceiteReducer = ( state= initialState, action) => {\r\n    switch (action.type) {\r\n        case types.dataAddNew:\r\n            return {\r\n                ...state,\r\n            }\r\n        case types.dataResult:\r\n            return {\r\n                ...state,\r\n                searchData: action.payload\r\n            }\r\n        case types.dataUpdated:\r\n            return {\r\n                ...state,\r\n                searchData: action.payload\r\n            }\r\n        \r\n        case types.datainitialState:\r\n            return {\r\n                ...state,\r\n                searchData: initialState.searchData\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    \r\n    filterSearchDate: '',\r\n    filterList: [],\r\n    filterActive: null\r\n}\r\n\r\nexport const filterReducer = (state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.filterLoaded:\r\n            return {\r\n                ...state,\r\n                filterList: [ ...action.payload ]\r\n            }\r\n\r\n\r\n        case types.filterAddNew:\r\n            return {\r\n                ...state,\r\n                filterList:[\r\n                    ...state.filterList,\r\n                    action.payload\r\n                ]\r\n            }\r\n        \r\n        case types.filterUpdated:\r\n            return {\r\n                ...state,\r\n                filterList: state.filterList.map(\r\n                    e => (e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.filterSetActive:\r\n            return {\r\n                ...state,\r\n                filterActive: action.payload\r\n            }\r\n        case types.filterClearActiveFilter:\r\n            return {\r\n                ...state,\r\n                filterActive: null\r\n            }\r\n\r\n        case types.filterDeleted:\r\n            return {\r\n                ...state,\r\n                filterList: state.filterList.filter(\r\n                   e => (e.id !== action.payload )\r\n                )\r\n            }\r\n\r\n        case types.filterNotResult:\r\n            return {\r\n                ...state,\r\n                filterList: []\r\n            }\r\n\r\n\r\n        case types.changeFilterDate:\r\n            return {\r\n                ...state,\r\n                filterSearchDate: action.payload\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    OpenFilterModal: false,\r\n    OpenAccountModal: false,\r\n    OpenAccountRecordModal: false,\r\n}\r\n\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenFilterModal:\r\n            return {\r\n                ...state,\r\n                OpenFilterModal: true\r\n            }\r\n\r\n        case types.uiCloseFilterModal:\r\n            return {\r\n                ...state,\r\n                OpenFilterModal: false\r\n            }\r\n        case types.uiOpenAccountModal:\r\n            return {\r\n                ...state,\r\n                OpenAccountModal: true\r\n            }\r\n\r\n        case types.uiCloseAccountModal:\r\n            return {\r\n                ...state,\r\n                OpenAccountModal: false\r\n            }   \r\n\r\n        case types.uiOpenAccountRecordModal:\r\n            return {\r\n                ...state,\r\n                OpenAccountRecordModal: true\r\n            }\r\n\r\n        case types.uiCloseAccountRecordModal:\r\n            return {\r\n                ...state,\r\n                OpenAccountRecordModal: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { accountReducer } from './accountReducer';\r\nimport { authReducer } from './authReducer';\r\nimport { companyReducer } from './companyReducer';\r\nimport { dataAceiteReducer } from './dataAceiteReducer';\r\nimport { filterReducer } from './filterReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    data: dataAceiteReducer,\r\n    auth: authReducer,\r\n    filter: filterReducer,\r\n    ui: uiReducer,\r\n    account: accountReducer,\r\n    company: companyReducer,\r\n})\r\n\r\n\r\n\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\n\r\nconst fetchSintoken = (endpoint, data, method='GET') => {\r\n    const url= `${baseUrl}/${endpoint}`;\r\n\r\n    if( method === 'GET') {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nconst fetchContoken = (endpoint, data, method='GET') => {\r\n    const url= `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    \r\n    if( method === 'GET') {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchSintoken,\r\n    fetchContoken,\r\n    \r\n}","import { fetchContoken, fetchSintoken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nexport const startLogin = ( nick, password ) => {\r\n    return async( dispatch ) => {\r\n      \r\n        const resp = await fetchSintoken('auth',{nick, password},'POST');\r\n        const body = await resp.json();\r\n        if( body.ok ) {\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                nick: body.nick\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        \r\n        const resp = await fetchContoken('auth/renew',{},'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                nick: body.nick\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\n\r\nconst logout = () => ({type: types.authLogout });\r\n\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchContoken, fetchSintoken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const dataStartResult = ( placa ) => {\r\n    return async ( dispatch ) => {\r\n        try {\r\n            const resp = await fetchSintoken('data',{placa}, 'POST');\r\n\r\n            const body = await resp.json(); \r\n            \r\n            if( body.ok ) {\r\n                dispatch(dataResult(body.data));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n                dispatch(badResult());\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst dataResult = ( data ) => ({\r\n    type:types.dataResult,\r\n    payload: data\r\n});\r\n\r\nexport const badResult = () => ({\r\n    type: types.datainitialState,\r\n});\r\n\r\nexport const dataStartAddNew = ( data ) => {\r\n    return async( dispatch ) => {\r\n        try {\r\n            const resp = await fetchContoken('data/new', data ,'POST');\r\n            const body = await resp.json();\r\n            if(body.ok) {\r\n                dispatch(dataAddNew(data));\r\n                Swal.fire('Guardado','Guardado con éxito', 'success');\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const dataAddNew = ( data ) => ({\r\n    type: types.dataAddNew,\r\n    payload: data\r\n});\r\n\r\n\r\nexport const dataSetActive = ( data ) => ({\r\n    type: types.dataResult,\r\n    payload: data\r\n});\r\n\r\nexport const dataStartUpdate = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchContoken(`data/${data.id}`,data, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ) {\r\n                dispatch(dataUpdated(data));\r\n                Swal.fire('Actualizado','Actualizado con éxito', 'success');\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst dataUpdated = (data) => ({\r\n    type: types.dataUpdated,\r\n    payload: data \r\n});\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { badResult } from '../../actions/data';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const {nick} = useSelector(state => state.auth)\r\n    \r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n        dispatch(badResult());\r\n    }\r\n    \r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n            MiPana\r\n        </Link>\r\n        <div className=\"navbar-collapse\">\r\n            {\r\n                (!!nick) &&\r\n                <div className=\"navbar-nav\">\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/filterwishlist\"\r\n                    >\r\n                        Lista deseo filtros\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/account\"\r\n                    >\r\n                        Cuentas y Saldos\r\n                    </NavLink>\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n        <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    {\r\n                        (!!nick)\r\n                        ?\r\n                            (       \r\n                                <button \r\n                                    className=\"btn btn-outline-danger\" \r\n                                    onClick={handleLogout}\r\n                                >\r\n                                    Logout\r\n                                </button>\r\n                            )  \r\n                        : \r\n \r\n                            (<NavLink \r\n                                activeClassName=\"active\"\r\n                                className=\"nav-item nav-link\" \r\n                                exact\r\n                                to=\"/login\"\r\n                            >\r\n                                Login\r\n                            </NavLink>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","\r\n\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchContoken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\"\r\n\r\n\r\n//trae todas las cuentas activas\r\nexport const getNotPaidAccounts = () => {\r\n    return  async(dispatch) => {\r\n        try {\r\n            const resp = await fetchContoken( 'account/notpaidaccounts',{},'POST' );\r\n            const body = await resp.json();\r\n            \r\n\r\n            dispatch( notPaidAccountsLoaded( body.accounts ) );\r\n \r\n        } catch ( error ) {\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\n\r\nconst notPaidAccountsLoaded = (accounts) => ({\r\n    type: types.accountListNotPaid,\r\n    payload: accounts\r\n});\r\n\r\nconst clearNotPaidAccounts = () =>({\r\n    type: types.accountclearListNotPaid,\r\n});\r\n\r\n\r\n\r\n// crear una nueva cuenta\r\nexport const accountStartAddNew = ( account ) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchContoken('account/new',account, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok) {\r\n                dispatch(accountAddNew(body.account));\r\n                // dispatch(accountStartResult(account.brand));\r\n                Swal.fire('Guardado','Guardado con éxito', 'success');\r\n                // dispatch(accountStartResult(account.date));\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst accountAddNew = (account) => ({\r\n    type: types.accountAddNew,\r\n    payload: account\r\n})\r\n\r\n// Actualizamos un cuenta  \r\nexport const accountStartUpdate = ( account ) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchContoken(`account/${account.id}`,account, 'PUT');\r\n            const body = await resp.json()\r\n        \r\n            if ( body.ok ) {\r\n                // dispatch(accountStartResult(account.brand));\r\n                dispatch( accountUpdated( body.account ) );\r\n                Swal.fire('Actualizado','Actualizado con éxito', 'success');\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst accountUpdated = (account) => ({\r\n    type: types.accountUpdated,\r\n    payload: account\r\n})\r\n\r\n\r\n\r\n//trae una lista de cuentas segun la marca elegida\r\nexport const accountStartResult = (brand) => {\r\n    return  async(dispatch) => {\r\n        try {\r\n            const resp = await fetchContoken( 'account',{brand},'POST' );\r\n            const body = await resp.json();\r\n            \r\n            if(body.ok) {\r\n                dispatch( accountResultLoaded( body.accounts ) );\r\n            } else {\r\n                dispatch( accountNotResultLoaded() );\r\n            }\r\n        } catch ( error ) {\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\n\r\nconst accountResultLoaded = ( accounts ) =>({\r\n    type: types.accountLoaded,\r\n    payload: accounts\r\n});\r\n\r\n\r\nconst accountNotResultLoaded = () =>({\r\n    type: types.accountNotResult,\r\n});\r\n\r\nexport const accountSetActive = (account) => ({\r\n    type: types.accountSetActive,\r\n    payload: account\r\n});\r\n\r\nexport const accountClearSetActive = () => ({\r\n    type: types.accountClearActiveAccount\r\n})\r\n\r\nexport const accountStartDelete = ( id ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            // console.log(id)\r\n            const resp = await fetchContoken(`account/delete/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            if(body.ok) {\r\n                dispatch(accountDeleted(id));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst accountDeleted = (id) => ({ \r\n    type: types.accountDeleted,\r\n    payload:  id\r\n})\r\n\r\n\r\n\r\nexport const changeAccountSearchBrand = (brand) => ({\r\n    type: types.changeAccountBrand,\r\n    payload: brand\r\n})","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenFilterModal = () => ({ type: types.uiOpenFilterModal });\r\nexport const uiCloseFilterModal = () => ({ type: types.uiCloseFilterModal });\r\n\r\nexport const uiOpenAccountModal = () => ({ type: types.uiOpenAccountModal });\r\nexport const uiCloseAccountModal = () => ({ type: types.uiCloseAccountModal });\r\n\r\n\r\nexport const uiOpenAccountRecordModal = () => ({ type: types.uiOpenAccountRecordModal });\r\nexport const uiCloseAccountRecordModal = () => ({ type: types.uiCloseAccountRecordModal });\r\n","import { useState } from \"react\";\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n  const setFormValues = ({state}) => {\r\n    setValues(state);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    const [section, key] = target.name.split(\".\");\r\n    // section is : company\r\n    // key is : position\r\n    \r\n    if (key) {\r\n        // if you have nested keys to update\r\n        setValues({\r\n          ...values,\r\n          [section]: {\r\n            ...values[section],\r\n            [key]: target.value\r\n          }\r\n        });\r\n    } else {\r\n      // if you're updating on the first level\r\n      setValues({\r\n        ...values,\r\n        [section]: target.value\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n\r\n  return [values, handleInputChange, reset, setFormValues];\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\nimport Swal from \"sweetalert2\";\r\nimport DatePicker from \"react-date-picker\";\r\n\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nimport { uiCloseAccountModal } from \"../../actions/ui\";\r\nimport {\r\n  accountClearSetActive,\r\n  accountStartAddNew,\r\n  accountStartUpdate,\r\n} from \"../../actions/account\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\n// Inicio del COmponente\r\nexport const AccountModal = () => {\r\n  const dispatch = useDispatch();\r\n  \r\n  const { OpenAccountModal } = useSelector((state) => state.ui);\r\n  const {companyActive} = useSelector( state => state.company );\r\n  const { accountActive } = useSelector((state) => state.account);\r\n  \r\n  const initAccount = {\r\n    initial_date: new Date(),\r\n    invoice_number: \"\",\r\n    brand: companyActive.brand,\r\n    total_amount: \"\",\r\n    currency: companyActive.currency,\r\n    record: [],\r\n  };\r\n\r\n \r\n  const [accountInitialDate, setAccountInitialDate] = useState(\r\n    !!accountActive ? accountActive.initial_date : new Date()\r\n  );\r\n\r\n  const [formValues, handleInputChange, setFormValues] = useForm(\r\n    !!accountActive ? accountActive : initAccount\r\n    );\r\n    \r\n    const { initial_date, invoice_number, brand, total_amount, record, currency } = formValues;\r\n\r\n    \r\n  useEffect(() => {\r\n\r\n    setFormValues({\r\n      initial_date: new Date(),\r\n      invoice_number: \"\",\r\n      brand: companyActive.brand,\r\n      total_amount: \"\",\r\n      currency:   companyActive.currency,\r\n      record: [{ date: new Date(), amount: \"\" }],\r\n    });\r\n  }, [companyActive]);\r\n\r\n  useEffect(() => {\r\n    if ( accountActive ) {\r\n      setFormValues( accountActive );\r\n    } else {\r\n      setFormValues( initAccount );\r\n    }\r\n  }, [accountActive]);\r\n\r\n  const handleInputInitialDate = (e) => {\r\n    setAccountInitialDate(e);\r\n    handleInputChange({\r\n      target: {\r\n        name: \"initial_date\",\r\n        value: e,\r\n      },\r\n    });\r\n  };\r\n\r\n  // handle input change\r\n  const handleListInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...record];\r\n    list[index][name] = value;\r\n    handleInputChange({\r\n      target: {\r\n        name: \"record\",\r\n        value: list,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleListInputChangeDate = (e, index) => {\r\n    const name = \"date\";\r\n    const list = [...record];\r\n    list[index][name] = e;\r\n    handleInputChange({\r\n      target: {\r\n        name: \"record\",\r\n        value: list,\r\n      },\r\n    }); \r\n  };\r\n\r\n  const closeModal = () => {\r\n    // TODO: cerrar el modal\r\n    dispatch(uiCloseAccountModal());\r\n\r\n    setFormValues({\r\n      initial_date: new Date(),\r\n      invoice_number: \"\",\r\n      brand: companyActive.brand,\r\n      total_amount: \"\",\r\n      record: [{ date: new Date(), amount: \"\" }],\r\n    });\r\n\r\n    if (!!accountActive) {\r\n      dispatch(accountClearSetActive());\r\n    }\r\n  };\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (e, index) => {\r\n    e.preventDefault();\r\n    const list = [...record];\r\n\r\n    list.splice(index, 1);\r\n\r\n    handleInputChange({\r\n      target: {\r\n        name: \"record\",\r\n        value: list,\r\n      },\r\n    });\r\n    \r\n  };\r\n\r\n  // handle click event of the Add button\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!initial_date || !invoice_number || !brand || !total_amount) {\r\n      return Swal.fire(\"Error\", \"Debe llenar todos los campos\", \"error\");\r\n    }\r\n\r\n    if (accountActive) {\r\n      dispatch(accountStartUpdate(formValues));\r\n      dispatch(accountClearSetActive());\r\n    } else {\r\n      dispatch(accountStartAddNew(formValues));\r\n    \r\n    }\r\n    // console.log(formValues);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={OpenAccountModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      // className=\"modal\"\r\n      // overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1> {accountActive ? \"Editar Cuenta\" : \"Nuevo Registro\"} </h1>\r\n      <h4> {brand} </h4>\r\n      <h4> {currency} </h4>\r\n      <hr />\r\n      <form className=\"container\" onSubmit={handleSubmitForm}>\r\n        <div className=\"form-group\">\r\n          <DatePicker\r\n            onChange={handleInputInitialDate}\r\n            value={accountInitialDate}\r\n            className=\"form-control\"\r\n            //  defaultValue={initial_date}\r\n            // disabled={!disablePlaca}\r\n            // selected={ initial_date || null}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Número de Factura</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Ingrese Numero de factura...\"\r\n            name=\"invoice_number\"\r\n            autoComplete=\"off\"\r\n            value={invoice_number}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Monto</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"Ingrese Monto total...\"\r\n            name=\"total_amount\"\r\n            autoComplete=\"off\"\r\n            value={total_amount}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Pagos</label>\r\n          {record.map((x, i) => {\r\n            return (\r\n              <div className=\"row g-3 mb-1\" key={i}>\r\n                <div className=\"col-auto\">\r\n                  <DatePicker\r\n                    onChange={(e) => handleListInputChangeDate(e, i)}\r\n                    value={x.date}\r\n                    className=\"form-control\"\r\n                    disabled={true}\r\n                  />\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <input\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    name=\"amount\"\r\n                    placeholder=\"Agregar Monto...\"\r\n                    className=\"form-control\"\r\n                    value={x.amount}\r\n                    onChange={(e) => handleListInputChange(e, i)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-auto px-0\">\r\n                  {record.length !== 1 && (\r\n                    <button\r\n                      className=\"btn btn-danger form-control\"\r\n                      onClick={(e) => handleRemoveClick(e, i)}\r\n                    >\r\n                      <i className=\"fas fa-minus\"></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                \r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span>Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport Modal from \"react-modal\";\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { accountClearSetActive, accountStartUpdate } from '../../actions/account';\r\nimport { uiCloseAccountRecordModal } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"-50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n    },\r\n  };\r\n  \r\nconst init = {\r\n    date: new Date(),\r\n    amount: ''\r\n}\r\n\r\n\r\nexport const AccountRecordModal = () => {\r\n\r\n    const {OpenAccountRecordModal} = useSelector( state => state.ui );\r\n    const {accountActive} = useSelector( state => state.account );\r\n\r\n    const [ formValues, handleInputChange, setFormValues ] = useForm( init );\r\n\r\n    const {date, amount} = formValues;\r\n\r\n    const dispatch = useDispatch();\r\n    const closeModal = () => {\r\n        dispatch(uiCloseAccountRecordModal());\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {   \r\n        e.preventDefault();\r\n\r\n        const debtCalculate = accountActive.total_amount - amount - accountActive.record.map(item => item.amount).reduce((prev, next) => prev + next,0);\r\n\r\n        const resp = {\r\n            ...accountActive,\r\n            ...((debtCalculate<=0) && { paid: true }),\r\n            record: [\r\n            ...accountActive.record,\r\n            formValues,\r\n        ]}\r\n\r\n\r\n        dispatch( accountStartUpdate( resp ) );\r\n\r\n        dispatch(uiCloseAccountRecordModal());\r\n        dispatch(accountClearSetActive());\r\n        setFormValues(init);\r\n    }\r\n\r\n    const handleInputDate = (e) => {\r\n        handleInputChange({\r\n            target:{\r\n                name: \"date\",\r\n                value: e\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={OpenAccountRecordModal}\r\n            onRequestClose={ closeModal }\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            // className=\"modal\"\r\n            // overlayClassName=\"modal-fondo\"\r\n        >\r\n             <h1> Nuevo Registro </h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                <DatePicker\r\n                    onChange={handleInputDate}\r\n                    value={date}\r\n                    className=\"form-control\"\r\n                    // disabled={!disablePlaca}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Monto</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Ingrese el monto\"\r\n                    name=\"amount\"\r\n                    autoComplete=\"off\"\r\n                    value={amount}\r\n                    onChange={handleInputChange}\r\n                />\r\n                </div>\r\n                \r\n\r\n                <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n                <i className=\"far fa-save\"></i>\r\n                <span>Guardar</span>\r\n                </button>\r\n            </form>\r\n    \r\n\r\n        </Modal>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { accountSetActive, accountStartDelete } from '../../actions/account';\r\nimport { uiOpenAccountModal, uiOpenAccountRecordModal } from '../../actions/ui';\r\n\r\nexport const AccountItemList = ( {account} ) => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const { id, invoice_number, total_amount, initial_date, record,paid} = account;\r\n    const accountInitialDate = new Date(initial_date);\r\n    // const [debt, setDebt] = useState(total_amount);\r\n    let debt = total_amount;\r\n \r\n    // const {accountList} = useSelector( state => state.account );   \r\n    const debtCalculate = total_amount - record.map(item => item.amount).reduce((prev, next) => prev + next,0);\r\n\r\n    const handleItemUpdate = (account) => {\r\n        dispatch( uiOpenAccountModal() );\r\n        dispatch( accountSetActive(account) );\r\n    };\r\n    \r\n    const handleItemDelete = (id) => {\r\n        dispatch(accountStartDelete(id));\r\n    };\r\n    \r\n    const handleItemRecord = (account) => {\r\n        dispatch(uiOpenAccountRecordModal());\r\n        dispatch( accountSetActive(account) );\r\n    }\r\n    \r\n    return (\r\n        <tr key={id}>\r\n        <td> {invoice_number} </td>\r\n        <td> {accountInitialDate.toLocaleDateString(\"es-ES\")} </td>\r\n        <td> {total_amount} </td>\r\n        <td>\r\n\r\n            <table>\r\n                <tbody>   \r\n                {\r\n                    \r\n                        record.map((record) => {\r\n                        const recordDate = new Date(record.date);\r\n                        debt = debt - record.amount; \r\n                        return (\r\n                                    <tr key={record._id}>                                \r\n                                        <td> {recordDate.toLocaleDateString(\"es-ES\")} </td>\r\n                                        <td> {record.amount} </td>\r\n                                    </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </table>\r\n            \r\n\r\n\r\n        </td>\r\n        <td>{paid ? 'CANCELADO' :debtCalculate}</td>\r\n\r\n        <td>\r\n        <button \r\n            className=\"btn btn-warning mr-4\"\r\n            onClick={handleItemUpdate.bind(this, account)}\r\n        >\r\n            <i className=\"fas fa-pencil-alt\"></i>\r\n        </button>\r\n        <button\r\n            className=\"btn btn-danger\"\r\n            onClick={handleItemDelete.bind(this, account.id)}\r\n        >\r\n            <i className=\"far fa-trash-alt fa-lg\"></i>\r\n        </button>\r\n\r\n        <button\r\n            className=\"btn btn-success ml-4\"\r\n            onClick={handleItemRecord.bind(this, account)}\r\n        >\r\n            <i className=\"fas fa-plus fa-lg\"></i>\r\n        </button>\r\n        </td>\r\n\r\n    </tr>  \r\n    )\r\n}\r\n","import { fetchContoken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const companyStartLoading = ( ) => {\r\n\r\n    return  async(dispatch) => {\r\n        try {\r\n            const resp = await fetchContoken( 'company',{},'POST' );\r\n            const body = await resp.json();\r\n            if(body.ok) {\r\n                dispatch( companyResultLoaded( body.companies ) );\r\n            } else {\r\n                dispatch( companyNotResultLoaded() );\r\n            }\r\n        } catch ( error ) {\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst companyResultLoaded = (companies) => ({\r\n    type: types.companyLoaded,\r\n    payload: companies\r\n} );\r\n\r\nconst companyNotResultLoaded = () => ({\r\n    type: types.companyNotResult\r\n});\r\n\r\n\r\nexport const companySetActive = (company) => ({\r\n    type: types.companySetActive,\r\n    payload: company\r\n});\r\n\r\nexport const companyClearActive = () => ({\r\n    type: types.companyClearActiveCompany\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Navbar } from \"../ui/Navbar\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./account.css\";\r\n\r\nimport {\r\n  accountStartResult,\r\n  changeAccountSearchBrand,\r\n  getNotPaidAccounts,\r\n} from \"../../actions/account\";\r\nimport { uiOpenAccountModal } from \"../../actions/ui\";\r\nimport { AccountModal } from \"./AccountModal\";\r\nimport { AccountRecordModal } from \"./AccountRecordModal\";\r\nimport { AccountItemList } from \"./AccountItemList\";\r\nimport { companySetActive, companyStartLoading } from \"../../actions/company\";\r\n\r\nexport const AccountScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { accountSearchBrand, accountList, accountListNotPaid } = useSelector(\r\n    (state) => state.account\r\n  );\r\n  const { companies, companyActive } = useSelector((state) => state.company);\r\n  const [paid, setPaid] = useState(false);\r\n  const [showList, setShowList] = useState(\r\n    accountList.filter((l) => l.paid === paid)\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(accountStartResult(accountSearchBrand));\r\n  }, [accountSearchBrand]);\r\n\r\n  useEffect(() => {\r\n    setShowList(accountList.filter((l) => l.paid === paid));\r\n  }, [accountList]);\r\n\r\n  useEffect(() => {\r\n    dispatch(companyStartLoading());\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n      dispatch(getNotPaidAccounts());\r\n  }, [getNotPaidAccounts]);\r\n\r\n  const options = companies.map((company) => ({\r\n    value: company.brand,\r\n    label: company.brand,\r\n  }));\r\n\r\n  const handleInputBrand = (e) => {\r\n    dispatch(accountStartResult(e.value));\r\n    dispatch(changeAccountSearchBrand(e.value));\r\n    dispatch(companySetActive(companies.find((c) => c.brand === e.value)));\r\n  };\r\n\r\n  const handleOpenModal = () => {\r\n    dispatch(uiOpenAccountModal());\r\n  };\r\n\r\n  const handleInputPaid = (e) => {\r\n    setPaid(e.target.checked);\r\n    setShowList(\r\n      e.target.checked\r\n        ? accountList\r\n        : accountList.filter((l) => l.paid === false)\r\n    );\r\n  };\r\n\r\n  // Funciones de procesamiento de datos\r\n  const getAmountList = (list) => {\r\n    return list.map((li) => {\r\n        const amount = li.record.map((li) => li.amount).reduce((prev, next) => prev + next, 0);\r\n        return li.total_amount - amount;\r\n    });\r\n  }\r\n\r\n  const getDeudaTotalBruta = (onlyBrand) => {\r\n\r\n    var lnp;\r\n    if(onlyBrand) {\r\n        lnp = accountListNotPaid.filter((l) =>  l.brand ===accountSearchBrand);\r\n    } else {\r\n        lnp = accountListNotPaid;\r\n    }\r\n    const listDolar = lnp.filter(li => li.currency ==='DOLAR');\r\n    const listSol = lnp.filter(li => li.currency ==='SOL');\r\n\r\n    const totalPaidDolar = getAmountList(listDolar);\r\n    const totalPaidSol = getAmountList(listSol);\r\n\r\n    // console.log(totalPaidDolar);\r\n    \r\n    const totalAmountDolar= totalPaidDolar.map((li) => li).reduce((prev, next) => prev + next, 0);\r\n    const totalAmountSol= totalPaidSol.map((li) => li).reduce((prev, next) => prev + next, 0);\r\n    \r\n    // console.log(totalAmount, totalPaid,);\r\n    return ({totalAmountDolar, totalAmountSol});\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <h4>MONEDA: {companyActive.currency}</h4>\r\n      <div className=\"account-container\">\r\n        <div>\r\n          <div className=\"account-box search-box\">\r\n            <Select\r\n              options={options}\r\n              value={{ value: accountSearchBrand, label: accountSearchBrand }}\r\n              onChange={handleInputBrand}\r\n            />\r\n\r\n            <button\r\n              className=\"btn btn-primary btn-block mt-4\"\r\n              onClick={handleOpenModal}\r\n            >\r\n              Nuevo Registro\r\n            </button>\r\n            <label>\r\n              Mostrar todas las deudas\r\n              <input\r\n                name=\"paid\"\r\n                type=\"checkbox\"\r\n                checked={paid}\r\n                onChange={handleInputPaid}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"account-box info-box\">\r\n\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\">Dolar</th>\r\n                        <th scope=\"col\">Sol</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <p>Deuda Total Bruta:  </p>\r\n                        </td>\r\n                        <td>{getDeudaTotalBruta(false).totalAmountDolar}</td>\r\n                        <td>{getDeudaTotalBruta(false).totalAmountSol}</td>\r\n                    </tr>\r\n\r\n\r\n                    <tr>\r\n                        <td>\r\n                            <p>Deuda de {accountSearchBrand}: </p>\r\n\r\n                        </td>\r\n                        <td>{getDeudaTotalBruta(true).totalAmountDolar}</td>\r\n                        <td>{getDeudaTotalBruta(true).totalAmountSol}</td>\r\n                    </tr>\r\n\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"account-response-box\">\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Nro Factura</th>\r\n                <th scope=\"col\">Fecha Registro</th>\r\n                <th scope=\"col\">Monto total</th>\r\n                <th scope=\"col\">Registro</th>\r\n                <th>Saldo</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {showList.map((account) => (\r\n                <AccountItemList key={account.id} account={account} />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <AccountModal />\r\n        <AccountRecordModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startLogin } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport './login.css'\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formValues, handleInputchange ] = useForm( {\r\n        nick: '',\r\n        password: ''\r\n    } );\r\n\r\n\r\n    const { nick, password } = formValues;\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(nick,password));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"nick\"\r\n                                name=\"nick\"\r\n                                autoComplete=\"off\"\r\n                                value={nick}\r\n                                onChange={handleInputchange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"password\"\r\n                                autoComplete=\"off\"\r\n                                value={password}\r\n                                onChange={handleInputchange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const SearchResponse = () => {\r\n    \r\n    const {searchData:{marca, aceite_motor, aceite_caja, filtros, liquido_radiador, obs}} = useSelector(state => state.data);\r\n    \r\n    // const {marca, aceite_motor, aceite_caja, filtros, liquido_radiador, obs} = searchData;    \r\n\r\n    const aceite_motor_fecha = new Date(aceite_motor.fecha);\r\n    const aceite_caja_fecha = new Date(aceite_caja.fecha);\r\n    const liquido_radiador_fecha = new Date(liquido_radiador.fecha);\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"search-response-box box\">\r\n                <h3> {marca} </h3>\r\n                <h4> Aceite:</h4>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Aceite</th>\r\n\r\n                            <th scope=\"col\">Fecha de cambio</th>\r\n                            <th scope=\"col\">Kilometraje</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{aceite_motor.aceite}</td>\r\n\r\n                            <td>\r\n                                {\r\n                                    (!!aceite_motor.fecha)\r\n                                    ?aceite_motor_fecha.toLocaleDateString(\"es-ES\")\r\n                                    : ''\r\n                                }\r\n                            \r\n                            </td>\r\n                            <td>{aceite_motor.km}</td>\r\n                        </tr>\r\n                        <tr>\r\n\r\n                            <td>{aceite_caja.aceite}</td>\r\n\r\n                            <td>\r\n                                {\r\n                                    (!!aceite_caja.fecha)\r\n                                    ? aceite_caja_fecha.toLocaleDateString(\"es-ES\")\r\n                                    : ''\r\n                                }\r\n                            </td>\r\n                            <td>{aceite_caja.km}</td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n                {/* Solo en modo admin */}\r\n                <h4>Filtros:</h4>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Aceite</th>\r\n                            <th scope=\"col\">Aire</th>\r\n                            <th scope=\"col\">Combustible</th>\r\n                            <th scope=\"col\">Cabina</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{filtros.aceite}</td>\r\n                            <td>{filtros.aire}</td>\r\n                            <td>{filtros.combustible}</td>\r\n                            <td>{filtros.cabina}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <h4>Refrigerante:</h4>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Refrigerante</th>\r\n                            <th scope=\"col\">Fecha</th>\r\n                            <th scope=\"col\">Kilometraje</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{liquido_radiador.liquido}</td>\r\n                            <td>\r\n                                {\r\n                                    (!!liquido_radiador.fecha)\r\n                                    ? liquido_radiador_fecha.toLocaleDateString(\"es-ES\")\r\n                                    : ''\r\n                                \r\n                                }\r\n                            </td>\r\n                            <td>{liquido_radiador.km}</td>\r\n    \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            <h4>Observaciones:</h4>\r\n                <p>{obs}</p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { SearchResponse } from './SearchResponse'\r\nimport './search.css'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { dataStartResult } from '../../actions/data'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const SearchScreen = () => {\r\n\r\n    const trueSearch = useSelector(state => state.data.searchData.placa);\r\n\r\n    const dispatch = useDispatch()\r\n    const [ formValues, handleInputchange ] = useForm( {\r\n        placa: ''\r\n    } );\r\n\r\n    const {placa} = formValues;\r\n\r\n    const handleSubmitForm = (e) => { \r\n        e.preventDefault();\r\n        if( placa === '' ) {\r\n            return Swal.fire('Error', 'Ingrese la Placa', 'error');\r\n        }\r\n\r\n        dispatch(dataStartResult(placa));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"search-container\">\r\n                <div className=\"search-box\">\r\n                    <form onSubmit={handleSubmitForm}>\r\n                        <h1>Ingrese la Placa:</h1>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Ingrese la placa...\"\r\n                            name=\"placa\"\r\n                            autoComplete=\"off\" \r\n                            value={placa}\r\n                            maxLength=\"6\"\r\n                            onChange={handleInputchange}        \r\n                        />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary ml-2\"\r\n                >\r\n                    <i className=\"fas fa-search\"></i>\r\n                    <span> Buscar</span>\r\n                </button>\r\n                    </form>\r\n                </div>\r\n\r\n                {\r\n                    (!!trueSearch) && (<SearchResponse />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchContoken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\"\r\n\r\n\r\n// crear un nuevo filtro\r\nexport const filterStartAddNew = ( filter ) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchContoken('filterswishlist/new',filter, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok) {\r\n                dispatch(filtertAddNew(body.filter));\r\n                Swal.fire('Guardado','Guardado con éxito', 'success');\r\n                // dispatch(filterStartResult(filter.date));\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst filtertAddNew = (filter) => ({\r\n    type: types.filterAddNew,\r\n    payload: filter\r\n})\r\n\r\n// Actualizamos un filtro\r\nexport const filterStartUpdate = ( filter ) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchContoken(`filterswishlist/${filter.id}`,filter, 'PUT');\r\n            const body = await resp.json()\r\n\r\n            if ( body.ok ) {\r\n                dispatch( filterUpdated( body.filter ) );\r\n                Swal.fire('Actualizado','Actualizado con éxito', 'success');\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst filterUpdated = (filter) => ({\r\n    type: types.filterUpdated,\r\n    payload: filter\r\n})\r\n\r\n\r\n\r\n//trae una lista de filtyros segun el mes elegido\r\nexport const filterStartResult = (date) => {\r\n    return  async(dispatch) => {\r\n        try {\r\n            const resp = await fetchContoken( 'filterswishlist',{date},'POST' );\r\n            const body = await resp.json();\r\n            if(body.ok) {\r\n                dispatch( FilterResultLoaded( body.filters ) );\r\n            } else {\r\n                dispatch( FilterNotResultLoaded() );\r\n            }\r\n        } catch ( error ) {\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\n\r\nconst FilterResultLoaded = ( filters ) =>({\r\n    type: types.filterLoaded,\r\n    payload: filters\r\n});\r\nconst FilterNotResultLoaded = () =>({\r\n    type: types.filterNotResult,\r\n\r\n});\r\n\r\nexport const filterSetActive = (filter) => ({\r\n    type: types.filterSetActive,\r\n    payload: filter\r\n});\r\n\r\nexport const filterClearSetActive = () => ({\r\n    type: types.filterClearActiveFilter\r\n})\r\n\r\nexport const filterStartDelete = ( id ) => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchContoken(`filterswishlist/delete/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            if(body.ok) {\r\n                dispatch(filterDeleted(id));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nconst filterDeleted = (id) => ({ \r\n    type: types.filterDeleted,\r\n    payload:  id\r\n})\r\n\r\n\r\n\r\nexport const changeFilterSearchDate = (date) => ({\r\n    type: types.changeFilterDate,\r\n    payload: date\r\n})","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\n\r\nimport Select from \"react-select\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport Swal from \"sweetalert2\";\r\nimport { filterClearSetActive, filterStartAddNew, filterStartUpdate } from \"../../actions/filter\";\r\nimport { uiCloseFilterModal } from \"../../actions/ui\";\r\n\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst options = [\r\n  { value: \"aceite\", label: \"aceite\" },\r\n  { value: \"aire\", label: \"aire\" },\r\n  { value: \"combustible\", label: \"combustible\" },\r\n  { value: \"cabina\", label: \"cabina\" },\r\n];\r\n\r\n\r\n// Inicio del COmponente\r\nexport const FilterModal = () => {\r\n  const dispatch = useDispatch();\r\n  \r\n    const { OpenFilterModal } = useSelector( state => state.ui );\r\n    const {filterActive,filterSearchDate} = useSelector(state => state.filter);\r\n\r\n  const initFilter = {\r\n    date: filterSearchDate,\r\n    filterType: \"\",\r\n    brand: \"\",\r\n    code: \"\",\r\n    application: [{value: \"\"}]\r\n  }\r\n\r\n  \r\n  const [ formValues, handleInputChange, setFormValues ] = useForm( !!filterActive ? filterActive : initFilter );\r\n  const {date,filterType, brand, code, application } = formValues;\r\n  \r\n  useEffect(() => {\r\n    handleInputChange({\r\n      target:{\r\n          name: \"date\",\r\n          value: filterSearchDate\r\n      }\r\n    });\r\n  }, [filterSearchDate]);\r\n  \r\n  useEffect(() => {\r\n    setFormValues( filterActive );\r\n    // eslint-disable-next-line\r\n}, [filterActive])\r\n\r\n  \r\n  const handleInputSelect = ( e ) => {\r\n    handleInputChange({\r\n        target:{\r\n            name: \"filterType\",\r\n            value: e.value\r\n        }\r\n    })\r\n  }\r\n\r\n  // handle input change\r\n  const handleListInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...application];\r\n    list[index][name] = value;\r\n    handleInputChange({\r\n        target:{\r\n            name: \"application\",\r\n            value: list\r\n        }\r\n    })\r\n  };\r\n\r\n  const closeModal = () => {\r\n    // TODO: cerrar el modal\r\n     dispatch( uiCloseFilterModal() );\r\n     setTimeout(function() {\r\n       if ( !!filterActive ) {\r\n         dispatch(filterClearSetActive());\r\n       }\r\n   \r\n       setFormValues( initFilter );\r\n\r\n    }, 300);\r\n  }\r\n\r\n  // handle click event of the Remove button\r\n  const handleRemoveClick = (e, index) => {\r\n    e.preventDefault();\r\n    const list = [...application];\r\n\r\n    list.splice(index, 1);\r\n\r\n    handleInputChange({\r\n        target:{\r\n            name: \"application\",\r\n            value: list\r\n        }\r\n    })\r\n\r\n  };\r\n\r\n  // handle click event of the Add button\r\n  const handleAddClick = () => {\r\n    handleInputChange({\r\n        target:{\r\n            name: \"application\",\r\n            value: [...application, {value: \"\"}]\r\n        }\r\n    })\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleSubmitForm = (e) =>{\r\n    e.preventDefault();\r\n\r\n    if(!date || !filterType || !brand || !code ) {\r\n      return Swal.fire('Error', 'Debe llenar todos los campos', 'error');\r\n    }\r\n\r\n    if ( filterActive ) {\r\n      dispatch( filterStartUpdate( formValues ) );\r\n      dispatch(filterClearSetActive());\r\n    } else {\r\n      dispatch( filterStartAddNew(formValues) );\r\n    }\r\n  \r\n    closeModal();\r\n    // console.log(formValues);    \r\n} \r\n\r\n  return (\r\n    <Modal\r\n      isOpen={OpenFilterModal}\r\n      onRequestClose={ closeModal }\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      // className=\"modal\"\r\n      // overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1> {filterActive ? \"Editar filtro\" : \"Nuevo filtro\"} </h1>\r\n      <hr />\r\n      <form\r\n        className=\"container\"\r\n        onSubmit={ handleSubmitForm }\r\n      >\r\n\r\n        <div className=\"form-group\">\r\n          <label>Tipo de filtro</label>\r\n          <Select\r\n            options={options}\r\n            value={filterType.value}\r\n            onChange={handleInputSelect}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Marca</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Ingrese la marca...\"\r\n            name=\"brand\"\r\n            autoComplete=\"off\"\r\n            value={brand}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Código</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Ingrese la marca...\"\r\n            name=\"code\"\r\n            autoComplete=\"off\"\r\n            value={code}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Aplicaciones</label>\r\n          {\r\n            application.map((x, i) => {\r\n              return(\r\n                <div className=\"row g-3 mb-1\"key={i}>\r\n                    <div className=\"col-auto\" >\r\n                        <input\r\n                            autoComplete=\"off\"\r\n                            name=\"value\"\r\n                            placeholder=\"Agregar Aplicación...\"\r\n                            className=\"form-control\"\r\n                            value={x.value}\r\n                            onChange={e => handleListInputChange(e, i)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-auto px-0\">\r\n                    {\r\n                        application.length !== 1 && \r\n                        (   \r\n                            <button \r\n                                className=\"btn btn-danger form-control\"\r\n\r\n                                onClick={(e) =>handleRemoveClick(e,i)}>\r\n                                    <i className=\"fas fa-minus\"></i>\r\n                            </button>\r\n                        )\r\n                    }\r\n                    </div>\r\n                    <div className=\"col-auto px-1\">\r\n                        {\r\n                            application.length - 1 === i && \r\n                            (\r\n                                <button \r\n                                type=\"button\"\r\n                                className= \"btn btn-primary form-control\" \r\n                                onClick={handleAddClick}>\r\n                                        <i className=\"fas fa-plus\"> </i>\r\n                                </button>\r\n\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n              );\r\n            })\r\n        }\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span>Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n\r\n  );\r\n\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport { Navbar } from \"../ui/Navbar\";\r\nimport \"./filterwishlist.css\";\r\nimport { changeFilterSearchDate, filterSetActive, filterStartDelete, filterStartResult } from \"../../actions/filter\";\r\nimport { FilterModal } from \"./FilterModal\";\r\nimport { uiOpenFilterModal } from \"../../actions/ui\";\r\n\r\n\r\nexport const FilterWishListScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { filterList } = useSelector((state) => state.filter);\r\n\r\n  const [searchDate, setSearchDate] = useState(new Date());\r\n  \r\n  const handleOpenModal = () => {\r\n    dispatch( uiOpenFilterModal() );\r\n  }\r\n  \r\n  const handleDateChange = (e) => {\r\n    setSearchDate(e);\r\n    dispatch(changeFilterSearchDate(e));\r\n    dispatch(filterStartResult(e));\r\n  };\r\n\r\n\r\n  const handleItemUpdate = (filter) => {\r\n    dispatch( uiOpenFilterModal() );\r\n    dispatch( filterSetActive(filter) );\r\n  };\r\n\r\n  const handleItemDelete = (id) => {\r\n    dispatch(filterStartDelete(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(changeFilterSearchDate(searchDate));\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(filterStartResult(searchDate));\r\n  }, [dispatch, searchDate]);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n\r\n      <div className=\"filter-container\">\r\n        <div className=\"filter-search-box\">\r\n          <DatePicker onChange={handleDateChange} value={searchDate} />\r\n          <button className=\"btn btn-primary ml-2\" onClick={handleOpenModal}>\r\n              Nuevo Filtro\r\n          </button>\r\n        </div>\r\n\r\n\r\n        <div className=\"filter-response-box\">\r\n          <table className=\"table table-bordered\" >\r\n            <thead >\r\n              <tr >\r\n                <th scope=\"col\">Fecha</th>\r\n                <th scope=\"col\">Tipo</th>\r\n                <th scope=\"col\">Marca</th>\r\n                <th scope=\"col\">Código</th>\r\n                <th scope=\"col\">Aplicación</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody >\r\n              {filterList.map((filter) => {\r\n                const filterDate = new Date(filter.date);\r\n                return (\r\n                  <tr key={filter.id}>\r\n                    <td>{filterDate.toLocaleDateString(\"es-ES\")}</td>\r\n                    <td> {filter.filterType} </td>\r\n                    <td> {filter.brand} </td>\r\n                    <td> {filter.code} </td>\r\n                    <td>\r\n                      <ul>\r\n                        {filter.application.map((item) => {\r\n                          return (\r\n                          <li key={item._id} >{item.value}</li>)\r\n                        })}\r\n                      </ul>\r\n                    </td>\r\n                    <td>\r\n                      <button \r\n                        className=\"btn btn-warning mr-4\"\r\n                        onClick={handleItemUpdate.bind(this, filter)}\r\n                      >\r\n                        <i className=\"fas fa-pencil-alt\"></i>\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={handleItemDelete.bind(this, filter.id)}\r\n                      >\r\n                        <i className=\"far fa-trash-alt fa-lg\"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <FilterModal />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React,{ useEffect, useState } from 'react'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport DatePicker from 'react-date-picker';\r\nimport './register.css';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { badResult, dataStartAddNew, dataStartResult, dataStartUpdate } from '../../actions/data';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {searchData} = useSelector(state => state.data);\r\n    const [ formValues, handleInputChange, setFormValues ] = useForm(searchData);\r\n    const {id, placa, marca, obs, aceite_motor, aceite_caja, filtros, liquido_radiador } = formValues;\r\n\r\n    const [fechaAceiteMotor, setFechaAceiteMotor] = useState('');\r\n    const [fechaAceiteCaja, setFechaAceiteCaja] = useState('');\r\n    const [fechaRefrigerante, setFechaRefrigerante] = useState('');\r\n    \r\n    const [disablePlaca, setDisablePlaca] = useState(false);\r\n\r\n    const [placaValid, setPlacaValid] = useState(true);\r\n    const [marcaValid, setMarcaValid] = useState(true);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        setFormValues( searchData );\r\n        // eslint-disable-next-line\r\n    }, [searchData])\r\n    \r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(placa.trim().length !== 6)\r\n        {\r\n            setPlacaValid(false);\r\n            return Swal.fire('Error', 'La placa debe contener 6 digitos', 'error');\r\n        }\r\n        setPlacaValid(true);\r\n        \r\n        if(marca.trim().length === 0)\r\n        {\r\n            setMarcaValid(false);\r\n            return Swal.fire('Error', 'el campo marca no debe estar vacio', 'error');\r\n        }\r\n        setMarcaValid(true);\r\n        if(id === '') {\r\n            dispatch(dataStartAddNew( formValues ));\r\n        } else {\r\n            dispatch(dataStartUpdate( formValues ));\r\n        }\r\n\r\n        \r\n    } \r\n\r\n    const handleInputDateAceiteMotor = (e) => {\r\n        setFechaAceiteMotor(e);\r\n        handleInputChange({\r\n            target:{\r\n                name: \"aceite_motor.fecha\",\r\n                value: e\r\n            }\r\n        })\r\n    }\r\n    \r\n    const handleInputDateAceiteCaja = (e) => {\r\n        setFechaAceiteCaja(e);\r\n        handleInputChange({\r\n            target:{\r\n                name: \"aceite_caja.fecha\",\r\n                value: e\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleInputDateRefrigerante = (e) => {\r\n        setFechaRefrigerante(e);\r\n        handleInputChange({\r\n            target:{\r\n                name: \"liquido_radiador.fecha\",\r\n                value: e\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    const  handleSearch = (e) => {\r\n        e.preventDefault();\r\n        setDisablePlaca(true);\r\n        dispatch(dataStartResult(placa));\r\n    }\r\n\r\n    const  handleReset = (e) => {\r\n        e.preventDefault();\r\n        setDisablePlaca(false);\r\n        dispatch(badResult());\r\n\r\n        \r\n        setFechaAceiteMotor('');\r\n        setFechaAceiteCaja('');\r\n        setFechaRefrigerante('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n        <div className=\"register-container\">\r\n            <div className=\"register-box\">\r\n                <h3>Registro & Actualización</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                                type=\"text\"\r\n                                className={` text ${!placaValid && 'is-invalid'}`}\r\n                                placeholder=\"Ingrese la placa...\"\r\n                                name=\"placa\"\r\n                                autoComplete=\"off\" \r\n                                maxLength=\"6\"\r\n                                value={placa}\r\n                                onChange={handleInputChange}        \r\n                                disabled={disablePlaca &&'disabled'}\r\n                            /> \r\n                            <button className=\"btn btn-primary ml-2\" onClick={handleSearch}>Buscar</button>\r\n                            <button className=\"btn btn-primary ml-2\" onClick={handleReset}>Reset</button>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\"\r\n                            className={`form-control ${!marcaValid && 'is-invalid'}`}\r\n                            placeholder=\"marca modelo\"\r\n                            name=\"marca\"\r\n                            autoComplete=\"off\" \r\n                            value={marca}\r\n                            onChange={handleInputChange}  \r\n                            disabled={!disablePlaca &&'disabled'}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* -----Info aceite de motor----- */}\r\n    \r\n                    <div className=\"row\">\r\n                        <div className=\"col\" >\r\n                            <label>Aceite de motor:</label>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Aceite motor\"\r\n                                    name=\"aceite_motor.aceite\"\r\n                                    autoComplete=\"off\" \r\n                                    value={aceite_motor.aceite}\r\n                                    onChange={handleInputChange}  \r\n                                    disabled={!disablePlaca &&'disabled'}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                     <DatePicker\r\n                                        onChange={handleInputDateAceiteMotor}\r\n                                        value={fechaAceiteMotor}\r\n                                        className=\"form-control\"\r\n                                        disabled={!disablePlaca}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Kilometraje motor\"\r\n                                    name=\"aceite_motor.km\"\r\n                                    autoComplete=\"off\" \r\n                                    value={aceite_motor.km}\r\n                                    onChange={handleInputChange}  \r\n                                    disabled={!disablePlaca &&'disabled'}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n  \r\n                    {/* -----Info aceite de caja----- */}\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\" >\r\n                            <label>Aceite de caja:</label>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Aceite caja\"\r\n                                    name=\"aceite_caja.aceite\"\r\n                                    autoComplete=\"off\" \r\n                                    value={aceite_caja.aceite}\r\n                                    onChange={handleInputChange} \r\n                                    disabled={!disablePlaca &&'disabled'} \r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                        <DatePicker\r\n                                            onChange={handleInputDateAceiteCaja}\r\n                                            value={fechaAceiteCaja}\r\n                                            className=\"form-control\"\r\n                                            disabled={!disablePlaca}\r\n                                        />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Kilometraje caja\"\r\n                                    name=\"aceite_caja.km\"\r\n                                    autoComplete=\"off\" \r\n                                    value={aceite_caja.km}\r\n                                    onChange={handleInputChange}  \r\n                                    disabled={!disablePlaca &&'disabled'}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* -----Info filtros ----- */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\" >\r\n                            <label>Filtros:</label>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Filtro Aceite\"\r\n                                    name=\"filtros.aceite\"\r\n                                    autoComplete=\"off\" \r\n                                    value={filtros.aceite}\r\n                                    onChange={handleInputChange}  \r\n                                    disabled={!disablePlaca &&'disabled'}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Filtro Aire\"\r\n                                    name=\"filtros.aire\"\r\n                                    autoComplete=\"off\" \r\n                                    value={filtros.aire}\r\n                                    onChange={handleInputChange}  \r\n                                    disabled={!disablePlaca &&'disabled'}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Filtro Combustible\"\r\n                                    name=\"filtros.combustible\"\r\n                                    autoComplete=\"off\" \r\n                                    value={filtros.combustible}\r\n                                    onChange={handleInputChange}  \r\n                                    disabled={!disablePlaca &&'disabled'}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Filtro cabina\"\r\n                                    name=\"filtros.cabina\"\r\n                                    autoComplete=\"off\" \r\n                                    value={filtros.cabina}\r\n                                    onChange={handleInputChange}  \r\n                                    disabled={!disablePlaca &&'disabled'}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* -----Info Liquido de radiador ----- */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\" >\r\n                            <label>Liquido de radiador:</label>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Liquido de radiador\"\r\n                                    name=\"liquido_radiador.liquido\"\r\n                                    autoComplete=\"off\" \r\n                                    value={liquido_radiador.liquido}\r\n                                    onChange={handleInputChange}  \r\n                                    disabled={!disablePlaca &&'disabled'}\r\n                                    \r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                        <DatePicker\r\n                                            onChange={handleInputDateRefrigerante}\r\n                                            value={fechaRefrigerante}\r\n                                            className=\"form-control\"\r\n                                            disabled={!disablePlaca}\r\n                                        />\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"col\" >\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Kilometraje radiador\"\r\n                                    name=\"liquido_radiador.km\"\r\n                                    autoComplete=\"off\" \r\n                                    value={liquido_radiador.km}\r\n                                    onChange={handleInputChange}  \r\n                                    disabled={!disablePlaca &&'disabled'}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Observaciones\"\r\n                            name=\"obs\"\r\n                            autoComplete=\"off\" \r\n                            value={obs}\r\n                            onChange={handleInputChange}  \r\n                            disabled={!disablePlaca &&'disabled'}\r\n                        />\r\n\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"submit\"\r\n                            className=\"btnSubmit\"\r\n                            value=\"Guardar\" \r\n                            disabled={!disablePlaca &&'disabled'}\r\n                        />\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                ? ( <Component { ...props } /> )\r\n                : ( <Redirect to=\"/\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/register\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { AccountScreen } from '../components/account/AccountScreen';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\n\r\nimport { SearchScreen } from '../components/consulta/SearchScreen';\r\nimport { FilterWishListScreen } from '../components/filterwishlist/FilterWishListScreen';\r\nimport { RegisterScreen } from '../components/registro/RegisterScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n  \r\n\r\nexport const AppRouter = () => {\r\n\r\n    const {nick} = useSelector(state => state.auth);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking());\r\n    }, [dispatch]);\r\n    \r\n    // if(checking) {\r\n    //     return (<h5>Espere ....</h5>)\r\n    // }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact \r\n                        path=\"/\" \r\n                        component={SearchScreen} \r\n                        isAuthenticated={!!nick}\r\n                    />\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginScreen} \r\n                        isAuthenticated={!!nick}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact \r\n                        path=\"/register\" \r\n                        component={RegisterScreen} \r\n                        isAuthenticated={!!nick}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact \r\n                        path=\"/filterwishlist\" \r\n                        component={FilterWishListScreen} \r\n                        isAuthenticated={!!nick}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact \r\n                        path=\"/account\" \r\n                        component={AccountScreen} \r\n                        isAuthenticated={!!nick}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n      </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const ConsultaApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ConsultaApp } from './ConsultaApp';\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <ConsultaApp />,\r\n\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}